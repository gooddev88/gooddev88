//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Robot.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GAEntities : DbContext
    {
        public GAEntities()
            : base("name=GAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Addr_Amphoe> Addr_Amphoe { get; set; }
        public virtual DbSet<Addr_Country> Addr_Country { get; set; }
        public virtual DbSet<Addr_District> Addr_District { get; set; }
        public virtual DbSet<Addr_Province> Addr_Province { get; set; }
        public virtual DbSet<BankInfo> BankInfo { get; set; }
        public virtual DbSet<BookBankInfo> BookBankInfo { get; set; }
        public virtual DbSet<CompanyInfo> CompanyInfo { get; set; }
        public virtual DbSet<CompanyRoot> CompanyRoot { get; set; }
        public virtual DbSet<Config> Config { get; set; }
        public virtual DbSet<CreditTerm> CreditTerm { get; set; }
        public virtual DbSet<CRMPointBalance> CRMPointBalance { get; set; }
        public virtual DbSet<CRMPointMovement> CRMPointMovement { get; set; }
        public virtual DbSet<CurrencyInfo> CurrencyInfo { get; set; }
        public virtual DbSet<CustomerInfo> CustomerInfo { get; set; }
        public virtual DbSet<DashBoard> DashBoard { get; set; }
        public virtual DbSet<DashBoardMenu> DashBoardMenu { get; set; }
        public virtual DbSet<DocTypeInfo> DocTypeInfo { get; set; }
        public virtual DbSet<ExchangeRate> ExchangeRate { get; set; }
        public virtual DbSet<GLAccount> GLAccount { get; set; }
        public virtual DbSet<IDGenerator> IDGenerator { get; set; }
        public virtual DbSet<ItemInfo> ItemInfo { get; set; }
        public virtual DbSet<ItemInPointRate> ItemInPointRate { get; set; }
        public virtual DbSet<ItemPriceInfo> ItemPriceInfo { get; set; }
        public virtual DbSet<LineLogIn> LineLogIn { get; set; }
        public virtual DbSet<LineLogInRequest> LineLogInRequest { get; set; }
        public virtual DbSet<LineSender> LineSender { get; set; }
        public virtual DbSet<Link> Link { get; set; }
        public virtual DbSet<LocationInfo> LocationInfo { get; set; }
        public virtual DbSet<LogInCrossAppReq> LogInCrossAppReq { get; set; }
        public virtual DbSet<LoginSessionLog> LoginSessionLog { get; set; }
        public virtual DbSet<MailConfig> MailConfig { get; set; }
        public virtual DbSet<MailGroup> MailGroup { get; set; }
        public virtual DbSet<MasterTypeHead> MasterTypeHead { get; set; }
        public virtual DbSet<MasterTypeLine> MasterTypeLine { get; set; }
        public virtual DbSet<OINVHead> OINVHead { get; set; }
        public virtual DbSet<OINVLine> OINVLine { get; set; }
        public virtual DbSet<OPaymentType> OPaymentType { get; set; }
        public virtual DbSet<ORCAdjust> ORCAdjust { get; set; }
        public virtual DbSet<ORCHead> ORCHead { get; set; }
        public virtual DbSet<ORCLine> ORCLine { get; set; }
        public virtual DbSet<ORCPayLine> ORCPayLine { get; set; }
        public virtual DbSet<POS_BOMLine> POS_BOMLine { get; set; }
        public virtual DbSet<POS_MAS_DocType> POS_MAS_DocType { get; set; }
        public virtual DbSet<POS_ORDERBomLine> POS_ORDERBomLine { get; set; }
        public virtual DbSet<POS_ORDERHead> POS_ORDERHead { get; set; }
        public virtual DbSet<POS_StkAdjustHead> POS_StkAdjustHead { get; set; }
        public virtual DbSet<POS_StkAdjustLine> POS_StkAdjustLine { get; set; }
        public virtual DbSet<POS_Table> POS_Table { get; set; }
        public virtual DbSet<TaxInfo> TaxInfo { get; set; }
        public virtual DbSet<ThaiPostAddress> ThaiPostAddress { get; set; }
        public virtual DbSet<UnitConvert> UnitConvert { get; set; }
        public virtual DbSet<UserGroupInBoard> UserGroupInBoard { get; set; }
        public virtual DbSet<UserGroupInCompany> UserGroupInCompany { get; set; }
        public virtual DbSet<UserGroupInDocStep> UserGroupInDocStep { get; set; }
        public virtual DbSet<UserGroupInfo> UserGroupInfo { get; set; }
        public virtual DbSet<UserGroupPermission> UserGroupPermission { get; set; }
        public virtual DbSet<UserInBoard> UserInBoard { get; set; }
        public virtual DbSet<UserInCompany> UserInCompany { get; set; }
        public virtual DbSet<UserInDocStep> UserInDocStep { get; set; }
        public virtual DbSet<UserInfo> UserInfo { get; set; }
        public virtual DbSet<UserInGroup> UserInGroup { get; set; }
        public virtual DbSet<UserInRCom> UserInRCom { get; set; }
        public virtual DbSet<UserMenu> UserMenu { get; set; }
        public virtual DbSet<V_Query> V_Query { get; set; }
        public virtual DbSet<VendorInfo> VendorInfo { get; set; }
        public virtual DbSet<XFileLocation> XFileLocation { get; set; }
        public virtual DbSet<XFilesRef> XFilesRef { get; set; }
        public virtual DbSet<vw_CompanyInfo> vw_CompanyInfo { get; set; }
        public virtual DbSet<vw_CustomerInfo> vw_CustomerInfo { get; set; }
        public virtual DbSet<vw_DocTypeInfo> vw_DocTypeInfo { get; set; }
        public virtual DbSet<vw_ItemBarcode> vw_ItemBarcode { get; set; }
        public virtual DbSet<vw_ItemInfo> vw_ItemInfo { get; set; }
        public virtual DbSet<vw_ItemPriceInfo> vw_ItemPriceInfo { get; set; }
        public virtual DbSet<vw_LineLogIn> vw_LineLogIn { get; set; }
        public virtual DbSet<vw_LineLogInRequest> vw_LineLogInRequest { get; set; }
        public virtual DbSet<vw_LocationInfo> vw_LocationInfo { get; set; }
        public virtual DbSet<vw_OINVHead> vw_OINVHead { get; set; }
        public virtual DbSet<vw_ORCHead> vw_ORCHead { get; set; }
        public virtual DbSet<vw_ORCLine> vw_ORCLine { get; set; }
        public virtual DbSet<vw_PermissionGroupInMenu> vw_PermissionGroupInMenu { get; set; }
        public virtual DbSet<vw_PermissionInBoard> vw_PermissionInBoard { get; set; }
        public virtual DbSet<vw_PermissionInCompany> vw_PermissionInCompany { get; set; }
        public virtual DbSet<vw_POS_ORDER_RM> vw_POS_ORDER_RM { get; set; }
        public virtual DbSet<vw_POS_ORDERHead> vw_POS_ORDERHead { get; set; }
        public virtual DbSet<vw_POSINVHead> vw_POSINVHead { get; set; }
        public virtual DbSet<vw_POSINVLine> vw_POSINVLine { get; set; }
        public virtual DbSet<vw_Postcode> vw_Postcode { get; set; }
        public virtual DbSet<vw_ThaiPostAddress> vw_ThaiPostAddress { get; set; }
        public virtual DbSet<vw_UIC> vw_UIC { get; set; }
        public virtual DbSet<vw_UIM> vw_UIM { get; set; }
        public virtual DbSet<vw_UserGroupInfo> vw_UserGroupInfo { get; set; }
        public virtual DbSet<vw_UserInBoard> vw_UserInBoard { get; set; }
        public virtual DbSet<vw_UserInfo> vw_UserInfo { get; set; }
        public virtual DbSet<vw_UserInGroup> vw_UserInGroup { get; set; }
        public virtual DbSet<vw_UserInRCom> vw_UserInRCom { get; set; }
        public virtual DbSet<vw_VendorInfo> vw_VendorInfo { get; set; }
        public virtual DbSet<vw_XFilesRef> vw_XFilesRef { get; set; }
        public virtual DbSet<ADBInfo> ADBInfo { get; set; }
        public virtual DbSet<TempFilePrinter> TempFilePrinter { get; set; }
        public virtual DbSet<POS_POFGLine> POS_POFGLine { get; set; }
        public virtual DbSet<POS_POLine> POS_POLine { get; set; }
        public virtual DbSet<POS_SaleRefresh> POS_SaleRefresh { get; set; }
        public virtual DbSet<vw_POS_POLine> vw_POS_POLine { get; set; }
        public virtual DbSet<vw_POS_POFGLine> vw_POS_POFGLine { get; set; }
        public virtual DbSet<POS_POHead> POS_POHead { get; set; }
        public virtual DbSet<vw_POS_POHead> vw_POS_POHead { get; set; }
        public virtual DbSet<MacRegister> MacRegister { get; set; }
        public virtual DbSet<vw_POS_BOMLine> vw_POS_BOMLine { get; set; }
        public virtual DbSet<UserPermission> UserPermission { get; set; }
        public virtual DbSet<POS_SaleLine> POS_SaleLine { get; set; }
        public virtual DbSet<POS_SaleLog> POS_SaleLog { get; set; }
        public virtual DbSet<POS_SalePayment> POS_SalePayment { get; set; }
        public virtual DbSet<POS_SaleHead> POS_SaleHead { get; set; }
        public virtual DbSet<vw_POS_SaleHead> vw_POS_SaleHead { get; set; }
        public virtual DbSet<vw_PermissionInMenu> vw_PermissionInMenu { get; set; }
        public virtual DbSet<POS_ORDERLine> POS_ORDERLine { get; set; }
        public virtual DbSet<vw_POS_ORDERLine> vw_POS_ORDERLine { get; set; }
        public virtual DbSet<POS_BOMHead> POS_BOMHead { get; set; }
        public virtual DbSet<vw_ItemUnit> vw_ItemUnit { get; set; }
        public virtual DbSet<ItemUnit> ItemUnit { get; set; }
        public virtual DbSet<POS_STKBal> POS_STKBal { get; set; }
        public virtual DbSet<POS_STKMove> POS_STKMove { get; set; }
        public virtual DbSet<vw_POS_STKBal> vw_POS_STKBal { get; set; }
        public virtual DbSet<vw_POS_STKMove> vw_POS_STKMove { get; set; }
        public virtual DbSet<ItemUnitConvert> ItemUnitConvert { get; set; }
        public virtual DbSet<vw_ItemUnitConvert> vw_ItemUnitConvert { get; set; }
        public virtual DbSet<vw_POS_STKBalInUnitConvert> vw_POS_STKBalInUnitConvert { get; set; }
        public virtual DbSet<TransactionLog> TransactionLog { get; set; }
    
        public virtual int SP_CalStkAddItemRecord2StkBal(string rcompany, string company)
        {
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkAddItemRecord2StkBal", rcompanyParameter, companyParameter);
        }
    
        public virtual int SP_CalStkAdjustMove(string docid, string doctype, string rcompany, string company)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkAdjustMove", docidParameter, doctypeParameter, rcompanyParameter, companyParameter);
        }
    
        public virtual int SP_CalStkBal(string rcompany, string company)
        {
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkBal", rcompanyParameter, companyParameter);
        }
    
        public virtual int SP_CalStkPOMove(string docid, string doctype, string rcompany, string company)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkPOMove", docidParameter, doctypeParameter, rcompanyParameter, companyParameter);
        }
    
        public virtual int SP_CalStkSaleMove(string docid, string doctype, string rcompany, string company)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkSaleMove", docidParameter, doctypeParameter, rcompanyParameter, companyParameter);
        }
    
        public virtual int SP_CopyCompany(string source, string destination, string roleType)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var roleTypeParameter = roleType != null ?
                new ObjectParameter("RoleType", roleType) :
                new ObjectParameter("RoleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CopyCompany", sourceParameter, destinationParameter, roleTypeParameter);
        }
    
        public virtual int SP_CopyPermission(string source, string destination, string roleType)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var roleTypeParameter = roleType != null ?
                new ObjectParameter("RoleType", roleType) :
                new ObjectParameter("RoleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CopyPermission", sourceParameter, destinationParameter, roleTypeParameter);
        }
    
        public virtual ObjectResult<SP_LIST_USERINCOMPANY_Result> SP_LIST_USERINCOMPANY(string username, string rCompany)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var rCompanyParameter = rCompany != null ?
                new ObjectParameter("RCompany", rCompany) :
                new ObjectParameter("RCompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_USERINCOMPANY_Result>("SP_LIST_USERINCOMPANY", usernameParameter, rCompanyParameter);
        }
    
        public virtual int SP_RPT_POS_DAILY_SALE_AllSTORE(Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_POS_DAILY_SALE_AllSTORE", beginParameter, endParameter);
        }
    
        public virtual int SP_RPT_POS_SUM_SALE_AllSTORE(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RPT_POS_SUM_SALE_AllSTORE", dateParameter);
        }
    
        public virtual ObjectResult<SP_RptPOS134_Result> SP_RptPOS134(string rcomID, string comID, Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var rcomIDParameter = rcomID != null ?
                new ObjectParameter("rcomID", rcomID) :
                new ObjectParameter("rcomID", typeof(string));
    
            var comIDParameter = comID != null ?
                new ObjectParameter("comID", comID) :
                new ObjectParameter("comID", typeof(string));
    
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("DateBegin", dateBegin) :
                new ObjectParameter("DateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RptPOS134_Result>("SP_RptPOS134", rcomIDParameter, comIDParameter, dateBeginParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<SP_GetStkBalByDate_Result> SP_GetStkBalByDate(string rcompany, string company, string locID, Nullable<System.DateTime> date)
        {
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            var locIDParameter = locID != null ?
                new ObjectParameter("LocID", locID) :
                new ObjectParameter("LocID", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetStkBalByDate_Result>("SP_GetStkBalByDate", rcompanyParameter, companyParameter, locIDParameter, dateParameter);
        }
    
        public virtual int SP_CalStkGrMove(string docid, string doctype, string rcompany, string company)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            var rcompanyParameter = rcompany != null ?
                new ObjectParameter("rcompany", rcompany) :
                new ObjectParameter("rcompany", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CalStkGrMove", docidParameter, doctypeParameter, rcompanyParameter, companyParameter);
        }
    
        public virtual ObjectResult<SP_RptPOS133_Result> SP_RptPOS133(string rcomID, string comID, Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var rcomIDParameter = rcomID != null ?
                new ObjectParameter("rcomID", rcomID) :
                new ObjectParameter("rcomID", typeof(string));
    
            var comIDParameter = comID != null ?
                new ObjectParameter("comID", comID) :
                new ObjectParameter("comID", typeof(string));
    
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RptPOS133_Result>("SP_RptPOS133", rcomIDParameter, comIDParameter, beginParameter, endParameter);
        }
    
        public virtual ObjectResult<SP_RptPOS133A_Result> SP_RptPOS133A(string rcomID, string comID, Nullable<System.DateTime> begin, Nullable<System.DateTime> end)
        {
            var rcomIDParameter = rcomID != null ?
                new ObjectParameter("rcomID", rcomID) :
                new ObjectParameter("rcomID", typeof(string));
    
            var comIDParameter = comID != null ?
                new ObjectParameter("comID", comID) :
                new ObjectParameter("comID", typeof(string));
    
            var beginParameter = begin.HasValue ?
                new ObjectParameter("Begin", begin) :
                new ObjectParameter("Begin", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("End", end) :
                new ObjectParameter("End", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RptPOS133A_Result>("SP_RptPOS133A", rcomIDParameter, comIDParameter, beginParameter, endParameter);
        }
    }
}
