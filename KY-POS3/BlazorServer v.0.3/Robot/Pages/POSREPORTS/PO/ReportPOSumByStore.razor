@page "/POSREPORTS/PO/ReportPOSumByStore/{isshowpendingonly}/{pagecomefrom}"
@using System.Globalization
@using Robot.Data.DA.REPORTS.PO
@*@using CurrieTechnologies.Razor.SweetAlert2
@using Robot.Data.DA
@using Robot.Data.ML;
@using Robot.Data.DA.LoginCrossApp
@using Robot.Data.DA.User
@using System.Threading;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore
@using Robot.Data.GADB.TT
@using Robot.Data.DA.POSSY
@using Robot.Data.DA.REPORTS.PO
@using Blazored.LocalStorage
@using Blazored.SessionStorage
@using System.Globalization

@inject SweetAlertService Swal
@inject POSService posService
@inject IJSRuntime JsRuntime
@inject NavigationManager nav
@inject ILocalStorageService localStorage
@inject ISessionStorageService sessionStorage
@inject LogInService login*@
@inject PageHistoryState pageHistory

<style>

    .btn-success {
        background-color: #20bf6b;
        border-color: #20bf6b;
    }

        .btn-success:hover {
            background-color: #26de81;
            border-color: #26de81;
        }

        .btn-success:not(:disabled):not(.disabled).active, .btn-success:not(:disabled):not(.disabled):active, .show > .btn-success.dropdown-toggle {
            background-color: #26de81;
            border-color: #26de81;
        }

    .btn-link {
        font-weight: 400 !important;
        color: #007bff !important;
        text-decoration: none !important;
    }

        .btn-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }

        .btn-link:not(:disabled):not(.disabled).active, .btn-link:not(:disabled):not(.disabled):active, .show > .btn-link.dropdown-toggle {
            color: #0056b3;
            text-decoration: underline;
        }
</style>

<SpinLoader IsLoading="isLoading">
    <LoadingTemplate>
        <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
            <br /><br />
            <div class="row pt-2">
                <div class="col-10 mx-auto">
                    <label style="color:orange; font-size:x-large;">... รอโหลดสักครู่ ...</label><br /><br /><br /><br />
                    <CircleFade Color="orange" Size="100px" Center="true" />
                    @*<Circle Color="orange" Size="165px" />*@
                </div>
            </div>
        </div>
    </LoadingTemplate>
    <ContentTemplate>


        <div class="row pb-1 pt-3">
            <div class="col-11 mx-auto text-center mx-0">
                <a ID="btnback" class="btn btn-dark w-100 text-white" @onclick="@Back">
                    <span style="font-size: 1.5rem;">
                        <i class="fas fa-chevron-circle-left"></i> &nbsp; รายการซื้อสินค้าสรุปตามสาขา
                    </span>
                </a>
            </div>
        </div>

        <div class="row pb-1 pt-1">
            <div class="col-11 mx-auto text-left mx-0">
                <a @onclick="@GoToSumbyItem" class="btn btn-default">
                    <i class="fas fa-drumstick-bite">    สรุปตามรายการสินค้า</i>
                </a>
            </div>
        </div>






        <div class="row pt-3" hidden="hidden">
            <div class="col-11 mx-auto">
                <div class="card">
                    <div class="card-body p-2">

                        <div class="row pb-2">
                            <div class="col-12">
                                <a class="btn btn-link w-100" data-toggle="collapse" @onclick="@(() => { IsVisible = !IsVisible; })">
                                    <i class="fas fa-filter"></i>
                                    <span style="font-size:medium;">ตัวกรอง</span>
                                </a>
                            </div>
                        </div>

                        <div class="collapse @(IsVisible ? "show" : "")">
                            <div class="row" style="display: inline-flex !important;">
                                @foreach (var v in Vendors_select_option) {
                                    <div class="col -md-4">
                                        <DxCheckBox Checked="@v.IsSelect" CheckedChanged="@((bool value) => ChangeFilter( value ,v.Value))"><span>@v.Value</span></DxCheckBox>&nbsp;&nbsp;
                                    </div>
                                }
                            </div>
                        </div>
                        @if (isshowpendingonly == "0") {
                            <div class="row pt-3">
                                <div class="col-11 mx-auto">
                                    <div class="card">
                                        <div class="card-body p-3">
                                            <div class="row pt-1">
                                                <div class="col-5">
                                                    <TelerikDatePicker @bind-Value="DateFr"
                                                                   Format="dd MMMM yyyy">
                                                    </TelerikDatePicker>
                                                </div>
                                                <div class="col-5">
                                                    <TelerikDatePicker @bind-Value="DateTo"
                                                                   Format="dd MMMM yyyy">
                                                    </TelerikDatePicker>
                                                </div>
                                                <div class="col-2 pl-0">

                                                    <a @onclick="@(async () => await SearchAction())" class="btn btn-info text-white">
                                                        ค้นหา
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        @if (datalist.Count() > 0) {


            
            <div class="row">
                <div class="col-11 mx-auto">

            <TelerikGrid Data=@datalist2
                     Pageable="false"
                     Groupable="false"
                     Sortable="true"
                     Resizable="true"
                     Reorderable="true"
                     PageSize="20"
                     Navigable="true">
                <GridAggregates>
                    <GridAggregate Field=@nameof(POSummaryByStoreWithVendor.TotalInVendor1) Aggregate="@GridAggregateType.Sum"  />
                    <GridAggregate Field=@nameof(POSummaryByStoreWithVendor.TotalInVendor2) Aggregate="@GridAggregateType.Sum" />
                    <GridAggregate Field=@nameof(POSummaryByStoreWithVendor.TotalInVendor3) Aggregate="@GridAggregateType.Sum" />
                    <GridAggregate Field=@nameof(POSummaryByStoreWithVendor.Total) Aggregate="@GridAggregateType.Sum" />
                </GridAggregates>
               
 
                <GridColumns>
                    <GridColumn Field=@nameof(POSummaryByStoreWithVendor.StoreName) Title="สาขา" Width="100%" />
                    <GridColumn Field="@nameof(POSummaryByStoreWithVendor.TotalInVendor1)" Title="Sup วัตถุดิบ"  Width="100px"  >
                        <Template>
                            @{
                                var data = context as POSummaryByStoreWithVendor;
                                <a class="btn btn-link" @onclick="@(() => ShowItemDetail2(data,"SUP"))">
                                @Convert.ToDecimal( data.TotalInVendor1).ToString("n2")
                                </a>
                        }
                    </Template>
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn>
                     <GridColumn Field="@nameof(POSummaryByStoreWithVendor.TotalInVendor2)" Title="ตลาดไท"  Width="100px" >
                        <Template>
                            @{
                                var data = context as POSummaryByStoreWithVendor;
                                <a class="btn btn-link" @onclick="@(() => ShowItemDetail2(data,"Sup วัตถุดิบ"))">
                                @Convert.ToDecimal( data.TotalInVendor2).ToString("n2")
                                </a>
                        }
                    </Template>
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn>
                       <GridColumn Field="@nameof(POSummaryByStoreWithVendor.TotalInVendor3)" Title="อื่นๆ"  Width="100px"  >
                        <Template>
                            @{
                                var data = context as POSummaryByStoreWithVendor;
                                <a class="btn btn-link" @onclick="@(() => ShowItemDetail2(data,"อื่นๆ"))">
                                @Convert.ToDecimal( data.TotalInVendor3).ToString("n2")
                                </a>
                        }
                    </Template>
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn>
                   <GridColumn Field="@nameof(POSummaryByStoreWithVendor.Total)" Title="รวม"  Width="100px"  >
                        <Template>
                            @{
                                var data = context as POSummaryByStoreWithVendor;
                             
                                @Convert.ToDecimal( data.Total).ToString("n2")
                               
                        }
                    </Template>
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn>
            </GridColumns>
        </TelerikGrid>


        </div>
        </div>




            <div class="row" hidden="hidden">
                <div class="col-12 mx-auto mx-0">
                 
                  
                    <div class="row pt-2">
                        @foreach (var ven in Vendors_select_option.Where(o => o.IsSelect)) {
                            @if (@datalist.Where(o => o.VendorID == ven.Value).Sum(o => o.Amt) != 0) {

                                <div class="col">
                                    <div class="card">
                                        <a class="w-100" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                    if (ven.Value == "อื่นๆ")
                                                                                    {
                                                                                        IsVisible = !IsVisible;
                                                                                    }
                                                                                    else if (ven.Value == "SUP")
                                                                                    {
                                                                                        IsVisibleSup = !IsVisibleSup;
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        IsVisibleMarketThai = !IsVisibleMarketThai;
                                                                                    }
                                                                                })" style="background-color: gold;">
                                            <div class="card-header">
                                                <div class="row">
                                                    <div class="col-6 text-left">
                                                        <h6 class="text-dark">@ven.Value</h6>
                                                    </div>
                                                    <div class="col-6 text-right">
                                                        <h4 class="text-dark"><strong> @datalist.Where(o => o.VendorID == ven.Value).Sum(o => o.Amt).ToString("n0") ฿</strong></h4>
                                                    </div>
                                                </div>
                                            </div>
                                        </a>
                                        <div class="card-body">
                                            @if (ven.Value == "") {
                                                Desc = Convert.ToString(IsVisible);
                                            } else if (ven.Value == "SUP") {
                                                Desc = Convert.ToString(IsVisibleSup);
                                            } else {
                                                Desc = Convert.ToString(IsVisibleMarketThai);
                                            }
                                            <div class="collapse @(Convert.ToBoolean(Desc) ? "show" : "")">
                                                @foreach (var l in datalist.Where(o => o.VendorID == ven.Value).ToList()) {
                                                    <div class="row">
                                                        <div class="col-6 text-left">
                                                            <span style="font-size:15px">   <strong> @l.CompanyName </strong></span><br />
                                                            <span style="font-size:12px">@l.PODate.ToString("dd/MM/yyyy")</span>
                                                        </div>
                                                        <div class="col-6 text-right">
                                                            <span style="font-size:15px">
                                                                <strong>  @l.Amt.ToString("n2")</strong>
                                                            </span>  <br />
                                                            <a @onclick="@(() => ShowItemDetail(l))" class="btn btn-link btn-sm pl-0">
                                                                <span style="font-size:small;">แสดงสินค้า</span>
                                                            </a>
                                                        </div>
                                                    </div>
                                                }
                                                <hr class="my-1" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            }
                        }
                    </div>
                </div>
            </div>

        } else {
            <div class="row pt-5">
                <div class="col-12 text-center">
                    <img src="/SALE/assets/img/filesearch.png" style="width:9rem;" /><br />
                    <span class="font-weight-bold" style="color:gray;"> ไม่พบรายการซื้อวัตถุดิบ </span>
                </div>
            </div>
        }

    </ContentTemplate>
</SpinLoader>



@code {

    [Parameter] public string isshowpendingonly { get; set; }
    [Parameter] public string pagecomefrom { get; set; }
    bool isLoading = true;

    List<SelectOption> Vendors_select_option = new List<SelectOption>();
    List<PORequestSummaryByStore> datalist = new List<PORequestSummaryByStore>();
    List<POSummaryByStoreWithVendor> datalist2 = new List<POSummaryByStoreWithVendor>();

    bool isOther { get; set; } = true;
    bool isSUP { get; set; } = true;
    bool isMarketThai { get; set; } = true;
    string Desc { get; set; } = "";

    public bool IsVisible { get; set; } = true;
    public bool IsVisibleSup { get; set; } = true;
    public bool IsVisibleMarketThai { get; set; } = true;

    DateTime? DateFr = DateTime.Now.AddDays(-2);
    DateTime? DateTo = DateTime.Now;



    protected override async Task OnInitializedAsync() {
        string uri = nav.Uri;
        pageHistory.AddPageToHistory(uri);
        await Task.Run(() => login.CheckLogin());
        await Task.Run(LoadFilter);
        await Task.Run(LoadData);
    }

    void LoadFilter() {
        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var voptn = VendorService.ListVendorForSelect(rcom);
        foreach (var v in voptn) {
            var IsExsit = Vendors_select_option.Where(o => o.Value == v.Value).FirstOrDefault();
            if (IsExsit == null) {
                Vendors_select_option.Add(v);
            }
        }
        //  InvokeAsync(StateHasChanged);
    }

    void LoadData() {
        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var qdata = POReportService.ListDataPOByStore(Convert.ToDateTime(DateFr).Date, Convert.ToDateTime(DateTo).Date, rcom, "", Convert.ToInt32(isshowpendingonly)).Where(o => o.Qty != 0).ToList();
        datalist2 = POReportService.ListDataPOByStoreConvert(qdata);
        var select_ven = Vendors_select_option.Where(o => o.IsSelect).Select(o => o.Value).ToList();
        datalist = qdata.Where(o => select_ven.Contains(o.VendorID)).ToList();
        isLoading = false;
        InvokeAsync(StateHasChanged);
    }

    void ShowItemDetail(PORequestSummaryByStore data) {
        var podate_str = data.PODate.ToString("yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture);
        if (data.VendorID == "") {
            data.VendorID = "other";
        }
        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        string uri = nav.Uri;
        pageHistory.AddPageToHistory(uri);
        nav.NavigateTo($"POSREPORTS/PO/ReportPODetailByStore/{data.ToLocID}/{data.VendorID}/{podate_str}/{rcom}/{isshowpendingonly}", false);
        InvokeAsync(StateHasChanged);
    }


    void ShowItemDetail2(POSummaryByStoreWithVendor data, string ven_id) {
        var podate_str = data.PODate.ToString("yyyyMMdd", System.Globalization.CultureInfo.InvariantCulture);

        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;

        pageHistory.AddPageToHistory( nav.Uri);
        string url = $"POSREPORTS/PO/ReportPODetailByStore/{data.StoreID}/{ven_id}/{podate_str}/{rcom}/{isshowpendingonly}";
        nav.NavigateTo( url);
        InvokeAsync(StateHasChanged);
    }

    async Task SearchAction() {
        isLoading = true;
        await Task.Run(LoadData);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }


    async Task ChangeFilter(bool isCheck, string VenId) {
        var s = Vendors_select_option.Where(o => o.Value == VenId).FirstOrDefault();
        s.IsSelect = isCheck;
        await Task.Run(LoadData);
        await InvokeAsync(StateHasChanged);
        //this.StateHasChanged();
    }

    async void Back() {
        string forwardurl = "";
        switch (pagecomefrom) {
            case "line":
                nav.NavigateTo("Menu/LineMenu");
                await InvokeAsync(StateHasChanged);
                break;
            case "web1":
                forwardurl = "/APP/POS/POSPOList?menu=2101";
                var reqInfo = LogInCrossAppService.CreateReqInfo("KYPOS", login.LoginInfo.CurrentRootCompany.CompanyID, login.LoginInfo.CurrentUser, forwardurl);
                string rootappurl = login.GetRootApp($"/Account/MyLogin/LoginFromApp?reqid={reqInfo.ReqID}");
                nav.NavigateTo(rootappurl);
                break;
            case "web2":
                nav.NavigateTo("Menu/MenuMaster/BACKEND");
                await InvokeAsync(StateHasChanged);
                break;
            default:
                nav.NavigateTo("Menu/MenuMaster/BACKEND");
                await InvokeAsync(StateHasChanged);
                break;
        }

        //var url = pageHistory.GetGoBackPage();
        //nav.NavigateTo(url);
        //await InvokeAsync(StateHasChanged);


        //nav.NavigateTo("Menu/MainMenu");
        //  await InvokeAsync(StateHasChanged);


    }

    
    void GoToSumbyItem() {
        string uri = nav.Uri;
        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        pageHistory.AddPageToHistory(uri);
        nav.NavigateTo($"POSREPORTS/PO/ReportPOSumByItem/{rcom}/1");
    }

}
