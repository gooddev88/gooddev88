@page "/Master/ItemDetail"
@page "/Master/ItemDetail/{pagecomefrom}"
@using Robot.Service.FileGo
@using Robot.Service.FileGo.Model
@using System.IO
@using static Robot.Data.ML.I_Result

@inject ItemService itemService

<style>


    .small {
        font-size: small;
    }

    .file-input-zone {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: transparent;
        color: black;
        cursor: crosshair;
        position: relative;
        width: 32px;
        height: 32px;
        background-image: url('/sale/assets/img/upload_logo.png');
    }

        .file-input-zone input[type=file] {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: crosshair;
        }

    /*ซ่อนเพิ่มลบตัวเลข TelerikNumericTextBox*/
    .k-input-spinner {
        display: none;
    }
</style>

<SpinLoader IsLoading="isLoading">
    <LoadingTemplate>
        <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
            <br /><br />
            <div class="row pt-2">
                <div class="col-10 mx-auto">
                    <label style="color:orange; font-size:x-large;">... รอโหลดสักครู่ ...</label><br /><br /><br /><br />
                    <CircleFade Color="orange" Size="100px" Center="true" />
                </div>
            </div>
        </div>
    </LoadingTemplate>
    <ContentTemplate>
@*        <div class="row">
            <div class="col-6">
                <div class="col-md-6">
                    <h4>
                        <a @onclick="Back">
                            <i class="fas fa-reply-all"></i>&nbsp;@menuCaption

                        </a>
                    </h4>
                </div>

            </div>
            <div class="col-6 text-end">
            </div>
        </div>*@


        <div class="row pt-3 px-2">
            <div class="col-md-4 col-sm-12 col-12 pr-0">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="row">
                                    <div class="col-6 text-start">
                                          
                        <h4>
                            <a @onclick="Back">
                                <i class="fas fa-reply-all"></i>&nbsp;@menuCaption

                            </a>
                        </h4>
                    
                                    </div>
                                    <div class="col-6 text-end pt-2">
                                        <TelerikButton Size="@(ThemeConstants.Button.Size.Medium)"
                                                       @onclick="@AddNewItem"
                                                       ThemeColor="@(ThemeConstants.Button.ThemeColor.Success)">เพิ่มใหม่</TelerikButton>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body p-3">
                                <div class="row pt-2">
                                    <div class="col-5">


                                        @*    <DxComboBox Data="@listType"
                                        CssClass="w-40"
                                        TextFieldName="@nameof(MasterTypeLine.Description1)"
                                        ValueFieldName="@nameof(MasterTypeLine.ValueTXT)"
                                        FilteringMode="DataGridFilteringMode.Contains"
                                        @bind-Value="@SelectType"
                                        SelectedItemChanged="@((MasterTypeLine data) => SelectedItemChanged(data))"
                                        SizeMode="@ControlSizeMode">
                                        </DxComboBox>*@
                                        <TelerikComboBox Data="@listType"
                                                         ValueChanged="@( (string v) => SelectedItemChanged(v) )"
                                                         TextField="@nameof(MasterTypeLine.Description1)"
                                                         ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                         Filterable="true"
                                                         Width="100%">
                                        </TelerikComboBox>
                                    </div>
                                    <div class="col-7">
                                        <div class="input-group">

                                            <TelerikTextBox OnChange="@MyOnChangeHandler" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row pt-2">
                    <div class="col-12">
                        <TelerikGrid @ref="@dxDataGrid"
                                     Data=@ListItemInfo
                                     Width="100%"
                                     Resizable="true"
                                     Pageable="true"
                                     Class="small"
                                     PageSize=20
                                     RowDraggable="false"
                                     OnRowClick="@OnRowClickHandler">
                            <GridColumns>
                                <GridColumn Field=@nameof(vw_ItemInfo.ItemID) Width="90px" Title="รหัส"  />
                                <GridColumn Field=@nameof(vw_ItemInfo.Name1) Width="160px" Title="ชื่อ" />
                                <GridColumn Field=@nameof(vw_ItemInfo.CateID) Width="80px" Title="หมวด" />
                                <GridColumn Field=@nameof(vw_ItemInfo.TypeID) Width="70px" Title="ประเภท" />
                                <GridColumn Field="IsActive" Title="ใช้งาน" Editable="true" Width="60px">
                                    <Template>
                                        @{
                                            var data = context as vw_ItemInfo;
                                            <div class="text-ceter"><TelerikCheckBox Value="data.IsActive" /></div>
                                        }
                                    </Template>
                                </GridColumn>
                            </GridColumns>
                        </TelerikGrid>
                    </div>
                </div>

            </div>
            <div class="col-md-8 col-sm-12 col-12">

                @*TAB Order*@
                <div class="row pb-1" style="font-size: smaller;">
                    <div class="col-10">
                        <div class="card">
                            <div class="card-header">
                                <div class="row">
                                    <div class="col-md-12" style="font-size:small;">
                                        <TelerikTabStrip TabPosition=@(Telerik.Blazor.TabPosition.Top)>

                                            <TabStripTab Title="ข้อมูลสินค้า">
                                                <div class="row pt-2">
                                                    <div class="col-md-12">
                                                        <h4>ข้อมูลสินค้าและบริการ</h4>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-8 col-sm-12 col-12">
                                                        <div class="row pb-1">
                                                            <div class="col-6">
                                                                <span style="color: gray;">รหัสสินค้าและบริการ</span>
                                                                <input type="text" class="form-control form-control-sm" @bind-value=" itemService.DocSet.Info.ItemID" readonly="@Itemreadonly" />

                                                            </div>
                                                            <div class="col-6">
                                                                <span style="color: gray;">รหัสอ้างอิง</span>
                                                                <TelerikTextBox @bind-Value="@itemService.DocSet.Info.RefID"
                                                                                Size="ThemeConstants.DropDownList.Size.Small" />

                                                            </div>
                                                        </div>

                                                        <div class="row pb-1">
                                                            <div class="col-12">
                                                                <span style="color: gray;">รายละเอียด 1</span>
                                                                <TelerikTextBox @bind-Value="@itemService.DocSet.Info.Name1"
                                                                                Size="ThemeConstants.DropDownList.Size.Small" />

                                                            </div>
                                                        </div>



                                                        <div class="row pb-1">
                                                            <div class="col-6">
                                                                <span style="color: gray;">ประเภท</span>

                                                                <TelerikComboBox @bind-Value="@itemService.DocSet.Info.TypeID"
                                                                                 Data="@listSelectType"
                                                                                 TextField="@nameof(MasterTypeLine.Description1)"
                                                                                 ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                </TelerikComboBox>


                                                            </div>
                                                            <div class="col-6">
                                                                <span style="color: gray;">หมวด</span>
                                                                <TelerikComboBox @bind-Value="@itemService.DocSet.Info.CateID"
                                                                                 Data="@ListCate"
                                                                                 TextField="@nameof(MasterTypeLine.Description1)"
                                                                                 ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                </TelerikComboBox>


                                                            </div>
                                                        </div>

                                                        <div class="row pb-1">
                                                            <div class="col-6">
                                                                <span style="color: gray;">เลือกผู้ขาย</span>

                                                                <TelerikComboBox @bind-Value="@itemService.DocSet.Info.VendorID"
                                                                                 Data="@ListVendor"
                                                                                 TextField="@nameof(VendorInfo.FullNameTh)"
                                                                                 ValueField="@nameof(VendorInfo.VendorID)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                </TelerikComboBox>


                                                            </div>
                                                            <div class="col-6">
                                                                <span style="color: gray;">ราคาทุน</span>
                                                                <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="Cost"
                                                                       oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                            </div>
                                                        </div>
                                                        <div class="row pb-1" hidden="hidden">
                                                            <div class="col-6">
                                                                <span style="color: gray;">ราคาขาย</span>
                                                                <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="Price"
                                                                       oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                            </div>

                                                        </div>
                                                        <div class="row pb-1">
                                                            <div class="col-6">
                                                                <span style="color: gray;">หน่วยพื้นฐาน</span>
                                                                <TelerikComboBox @bind-Value="@itemService.DocSet.Info.UnitID"
                                                                                 Data="@ListUnit"
                                                                                 TextField="@nameof(MasterTypeLine.Description1)"
                                                                                 ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                </TelerikComboBox>


                                                            </div>
                                                            <div class="col-6">
                                                                <span style="color: gray;">จัดเรียง</span>
                                                                <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="Sort"
                                                                       oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                            </div>
                                                        </div>

                                                        <div class="row pb-1">
                                                            <div class="col-12">
                                                                <span style="color: gray;">ชื่อเปิดบิล</span>

                                                                <TelerikTextArea @bind-Value="@itemService.DocSet.Info.Remark1"
                                                                                 AutoSize="true"
                                                                                 Class="w-100"
                                                                                 PlaceHolder="">
                                                                </TelerikTextArea>



                                                            </div>
                                                            <div class="col-12">
                                                                <span style="color: gray;">หมายเหตุ</span>
                                                                <TelerikTextArea @bind-Value="@itemService.DocSet.Info.Remark2"
                                                                                 AutoSize="true"
                                                                                 Class="w-100"
                                                                                 PlaceHolder="">
                                                                </TelerikTextArea>

                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-md-4 col-sm-12 col-12">
                                                        @* Profile*@

                                                        <SpinLoader IsLoading="isUploading">
                                                            <LoadingTemplate>
                                                                <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
                                                                    <br /><br />
                                                                    <div class="row pt-2">
                                                                        <div class="col-10 mx-auto">
                                                                            <label style="color:blue; font-size:x-small;">... Loading ...</label><br /><br /><br /><br />
                                                                            <CircleFade Color="blue" Size="100px" Center="true" />

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </LoadingTemplate>
                                                            <ContentTemplate>
                                                                @if (itemService.DocSet.Info.ItemID != "") {
                                                                    <div class="row pb-1">
                                                                        <div class="col-12">
                                                                            <div class="card">
                                                                                <div class="card-body">
                                                                                    <div class="row">
                                                                                        <div class="col-12">
                                                                                            <div class="file-input-zone">
                                                                                                <InputFile OnChange="OnInputFileChanged" style="opacity:0;" accept="image/png, image/jpeg, image/gif,application/pdf">
                                                                                                </InputFile>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="row pt-1">
                                                                                        <div class="col-10 mx-auto mx-0">
                                                                                            <a @onclick="@DownLoadImage">
                                                                                                <img src=@ImageUrl style="width:100%; height:100%;" onerror="this.onerror=null; this.src='/assets/img/pear.png'">
                                                                                            </a>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="row">
                                                                                        <div class="col-12 text-end">
                                                                                            <a class="btn btn-default" @onclick="@OnDeleteProfile"> <i class="far fa-trash-alt"></i></a>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }

                                                                <div class="row pb-1 text-end" hidden="hidden">
                                                                    <div class="col-12">
                                                                        <a @onclick="@Convert2File">
                                                                            <i class="fas fa-photo-video"></i>
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            </ContentTemplate>
                                                        </SpinLoader>

                                                        @* End Profile*@
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-4 col-sm-6 col-6 text-start pt-4">
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <TelerikCheckBox Id="chkIsActive" @bind-Value="@itemService.DocSet.Info.IsActive"></TelerikCheckBox>
                                                                <label for="chkIsActive">ใช้งาน</label>


                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <TelerikCheckBox Id="chkIsActive" @bind-Value="@itemService.DocSet.Info.IsKeepStock"></TelerikCheckBox>
                                                                <label for="chkIsKeepStock">เก็บสต๊อก</label>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    @if (isShowSave) {
                                                        <div class="col-md-4 col-sm-6 col-6 text-center pt-4">
                                                            <TelerikButton Size="@(ThemeConstants.Button.Size.Large)"
                                                                       @onclick="@OnSave" Class="w-100 py-2"
                                                                       ThemeColor="@(ThemeConstants.Button.ThemeColor.Success)"><i class="fas fa-save fa-lg"></i>&nbsp;บันทึก</TelerikButton>
                                                        </div>
                                                    }
                                                </div>

                                            </TabStripTab>
                                            <TabStripTab Title="ข้อมูลราคาสินค้า">
                                                      <div class="row pb-1">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header text-white bg-secondary">
                                                        <i class="fa fa-address-card"></i>&nbsp;<span>ราคาสินค้าในสาขา</span>
                                                    </div>

                                                    <div class="card-body">
                                                        <div class="row">
                                                            <div class="col-10">
                                                                <div class="row ">
                                                                    <div class="col-4">
                                                                        <span style="color: gray;">สาขา</span>

                                                                        <TelerikComboBox @bind-Value="@SelectComID"
                                                                                 Data="@ListCompany"
                                                                                 TextField="@nameof(CompanyService.CompanyInfoList.Name)"
                                                                                 ValueField="@nameof(CompanyService.CompanyInfoList.CompanyID)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                        </TelerikComboBox>

                                                                    </div>
                                                                    <div class="col-2">
                                                                        <span style="color: gray;">ช่องทาง</span>
                                                                        <TelerikComboBox @bind-Value="@SelectShipTo"
                                                                                 Data="@ListShipTo"
                                                                                 TextField="@nameof(ShipToService.ShipTo.ShipToName)"
                                                                                 ValueField="@nameof(ShipToService.ShipTo.ShipToID)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                        </TelerikComboBox>

                                                                    </div>
                                                                    <div class="col-3">
                                                                        <span style="color: gray;">วันที่เริ่ม</span>
                                                                        <TelerikDatePicker @bind-Value="@DatePriceFr"
                                                                                   Format="dd/MM/yyyy">
                                                                        </TelerikDatePicker>


                                                                    </div>
                                                                    <div class="col-3">
                                                                        <span style="color: gray;">ถึงวันที่</span>

                                                                        <TelerikDatePicker @bind-Value="@DatePriceTo"
                                                                                   Format="dd/MM/yyyy">
                                                                        </TelerikDatePicker>


                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-4">
                                                                        <span style="color: gray;">คำนวณภาษี </span>
                                                                        <TelerikComboBox @bind-Value="@SelectPriceTaxcon"
                                                                                 Data="@listPriceTaxcon"
                                                                                 TextField="@nameof(MasterTypeLine.Description1)"
                                                                                 ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                        </TelerikComboBox>

                                                                    </div>
                                                                    <div class="col-2">
                                                                        <span style="color: gray;">ราคา </span>
                                                                        <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="PriceInItem"
                                                                       oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                                    </div>
                                                                    <div class="col-3">
                                                                        <span style="color: gray;">ลำดับใช้งาน</span>

                                                                        <TelerikComboBox @bind-Value="@SelectUseLevel"
                                                                                 Data="@ListUseLevel"
                                                                                 TextField="@nameof(SelectOption.Description)"
                                                                                 ValueField="@nameof(SelectOption.Value)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                        </TelerikComboBox>

                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-2">
                                                                <span>&nbsp;</span>
                                                                <a @onclick="@AddItemPrice" class="btn btn-dark w-100 text-white">
                                                                    <i class="far fa-plus"></i> &nbsp;เพิ่ม
                                                                </a>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row pt-1 pb-1">
                                            <div class="col-12">
                                                <TelerikGrid Data=@itemService.DocSet.VItemPrice
                                                     Pageable="true"
                                                     Groupable="false"
                                                     Sortable="true"
                                                     Resizable="true"
                                                     Reorderable="true"
                                                     PageSize="20"
                                                     Navigable="true">
                                                    <GridColumns>
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.CompanyID) Title="สาขา" Width="120px" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.CompanyName) Title="ชื่อสาขา" Width="160px" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.UseLevel) Title="ลำดับใช้งาน" Width="100px" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.CustID) Title="ช่องทางขาย" Width="120px" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.PriceTaxCondType) Title="คำนวณภาษี" Width="120px" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.Price) Title="ยอดที่ราคา" Width="120px" DisplayFormat="{0:N2}" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.DateBegin) Title="Date Begin" Width="120px" DisplayFormat="{0:dd/MM/yyyy}" />
                                                        <GridColumn Field=@nameof(vw_ItemPriceInfo.DateEnd) Title="Date End" Width="120px" DisplayFormat="{0:dd/MM/yyyy}" />

                                                        <GridColumn Title="ลบ" Editable="false" Width="80px">
                                                            <Template>
                                                                @{
                                                                    var data = context as vw_ItemPriceInfo;
                                                                    <a class="btn btn-link" onclick="@(() => GoDeleteItemPrice(data))">
                                                                        <i class="fas fa-trash-alt"></i>
                                                                    </a>
                                                                }
                                                            </Template>
                                                        </GridColumn>
                                                    </GridColumns>
                                                </TelerikGrid>
                                            </div>
                                        </div>
                                            </TabStripTab>
                                            <TabStripTab Title="แปลงหน่วย">
                                                <div class="row pb-1">
                                                    <div class="col-md-12">
                                                        <div class="card">
                                                            <div class="card-header text-white bg-secondary">
                                                                <i class="fa fa-address-card"></i>&nbsp;<span>แปลงหน่วย</span>
                                                            </div>
                                                            <div class="card-body">

                                                                @if (!string.IsNullOrEmpty(itemService.DocSet.Info.UnitID)) {
                                                                    <div class="row pt-2 pb-2">
                                                                        <div class="col-md-12">
                                                                            <h4>หน่วยพื้นฐาน คือ @itemService.DocSet.Info.UnitID</h4>
                                                                        </div>
                                                                    </div>
                                                                }

                                                                <div class="row">
                                                                    <div class="col-md-3">
                                                                        <span>แปลงหน่วยเป็น</span>
                                                                        <TelerikComboBox @bind-Value="@ItemInUnit"
                                                                                         Data="@CboUnitInItem"
                                                                                         TextField="@nameof(MasterTypeLine.Description1)"
                                                                                         ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                                                         Filterable="true"
                                                                                         Width="100%">
                                                                        </TelerikComboBox>
                                                                    </div>
                                                                    <div class="col-md-2">
                                                                        <span>ได้หน่วยพื้นฐาน</span>
                                                                        <TelerikNumericTextBox Decimals="0" Format="N0"
                                                                                               Class="text-end pe-2" @bind-Value="@QtyInBaseUnit"></TelerikNumericTextBox>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <span>จากจำนวนในหน่วยนี้</span>
                                                                        <TelerikNumericTextBox Decimals="0" Format="N0"
                                                                                               Class="text-end pe-2" @bind-Value="@QtyInThisUnit"></TelerikNumericTextBox>
                                                                    </div>
                                                                    <div class="col-4 text-end pt-3">
                                                                        <span>&nbsp;</span>
                                                                        <TelerikButton Size="@(ThemeConstants.Button.Size.Medium)"
                                                                                       @onclick="@AddItemUnitConvert" Class="px-4"
                                                                                       ThemeColor="@(ThemeConstants.Button.ThemeColor.Success)">เพิ่ม</TelerikButton>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row pt-1 pb-1">
                                                    <div class="col-12">
                                                        <TelerikGrid Data=@itemService.DocSet.ItemUnitConvert
                                                                     Pageable="false"
                                                                     Groupable="false"
                                                                     Sortable="true"
                                                                     Resizable="true"
                                                                     Reorderable="true"
                                                                     PageSize="20"
                                                                     Navigable="true">
                                                            <GridColumns>
                                                                <GridColumn Field=@nameof(vw_ItemUnitConvert.UnitToDesc) Title="แปลงหน่วยเป็น" Width="150px" />
                                                                <GridColumn Field=@nameof(vw_ItemUnitConvert.QtyInBaseUnit) Title="ได้หน่วยพื้นฐาน" DisplayFormat="{0:N0}" Width="150px" />
                                                                <GridColumn Field=@nameof(vw_ItemUnitConvert.QtyInThisUnit) Title="จากจำนวนในหน่วยนี้" DisplayFormat="{0:N0}" Width="150px" />
                                                                <GridColumn Title="" Editable="false" Width="40px">
                                                                    <Template>
                                                                        @{
                                                                            var data = context as vw_ItemUnitConvert;
                                                                            <button class="btn btn-sm" @onclick="@(() => DeleteItemUnitConvert(data))"><i class="fas fa-trash" style="font-size:17px"></i>  </button>
                                                                        }
                                                                    </Template>
                                                                </GridColumn>
                                                            </GridColumns>
                                                        </TelerikGrid>
                                                    </div>
                                                </div>
                                            </TabStripTab>
                                            <TabStripTab Title="ตั้งค่าแต้มสะสมสินค้า">
                                                            <div class="row pb-1">
                                            <div class="col-12">
                                                <div class="card">
                                                    <div class="card-header text-white bg-secondary">
                                                        <i class="fa fa-address-card"></i>&nbsp;<span>ตั้งค่าแต้มสะสมสินค้า</span>
                                                    </div>
                                                    <div class="card-body">
                                                        <div class="row">
                                                            <div class="col-3">
                                                                <span style="color: gray;">จำนวนเงินต่อแต้ม</span>
                                                                <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="AmtPerPointRate"
                                                               oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                            </div>
                                                            <div class="col-2">
                                                                <span style="color: gray;">เริ่มต้น</span>
                                                                <TelerikDatePicker @bind-Value="@dtPointDateBegin"
                                                                           Format="dd/MM/yyyy">
                                                                </TelerikDatePicker>



                                                            </div>
                                                            <div class="col-2">
                                                                <span style="color: gray;">สิ้นสุด</span>
                                                                <TelerikDatePicker @bind-Value="@dtPointDateEnd"
                                                                           Format="dd/MM/yyyy">
                                                                </TelerikDatePicker>

                                                            </div>
                                                            <div class="col-3">
                                                                <span style="color: gray;">อายุแต้ม(เดือน)</span>
                                                                <input type="text" class="form-control form-control-sm text-center font-weight-bold" @bind-value="ExpireInMont"
                                                               oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*?)\..*/g, '$1');" />
                                                            </div>
                                                            <div class="col-2 text-start">
                                                                <span>&nbsp;</span>
                                                                <a @onclick="@AddItemInPointRate" class="btn btn-dark w-100 text-white">
                                                                    <i class="fas fa-save fa-lg"></i>&nbsp;เพิ่ม
                                                                </a>
                                                            </div>

                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row pt-1 pb-1">
                                            <div class="col-12">
                                                <div class="row pt-2" style="min-height:600px">
                                                    <div class="col-12">


                                                        <TelerikGrid Data=@itemService.DocSet.ItemPointRate
                             Pageable="true"
                             Groupable="false"
                             Sortable="true"
                             Resizable="true"
                             Reorderable="true"
                             PageSize="20"
                             Navigable="true">


                                                      
                                                            <GridColumns>

                                                                    <GridColumn Field="@nameof(ItemInPointRate.ID)" Title="ลบ" Editable="false" Width="80px">
                            <Template>
                                @{
                                                                                var data = context as ItemInPointRate;
                                                                                <button class="btn btn-sm" @onclick="@(() => GoDeleteItemInPointRate(data))">
                                        <i class="fa-solid fa-folder-open" style="font-size:20px"></i>
                                    </button>
                                }
                            </Template>
                        </GridColumn>

                                                                <GridColumn Width="140px" Field="@nameof(ItemInPointRate.ItemID)" Title="รหัสสินค้า" />
                                                                <GridColumn  Width="140px" Field="@nameof(ItemInPointRate.AmtPerPointRate)" Title="จำนวนเงินต่อแต้ม" DisplayFormat="{0:N2}"  />
                                                                <GridColumn Width="140px" Field="@nameof(ItemInPointRate.DateBegin)" Title="เริ่มต้น" DisplayFormat="{0:dd/MM/yyyy}"  />
                                                                <GridColumn  Width="140px" Field="@nameof(ItemInPointRate.DateEnd)" Title="สิ้นสุด" DisplayFormat="{0:dd/MM/yyyy}"  />
                                                                <GridColumn Width="120px" Field="@nameof(ItemInPointRate.ExpireInMont)" Title="อายุแต้ม(เดือน)" DisplayFormat="{0:N0}"  />

                                                            </GridColumns>
                                                 
                                                        </TelerikGrid>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                            </TabStripTab>
                                            <TabStripTab Title="ผูกสินค้า">
                                             <div class="row pb-1">
                                            <div class="col-12">

                                                <div class="row pt-2">
                                                    <div class="col-md-6">
                                                        <h4>เลือกรายการ Ontop แล้วกดบันทึก</h4>
                                                    </div>
                                                    <div class="col-md-6 text-end">
                                                        <a @onclick="@AddItemRelate" class="btn btn-success text-white px-5">
                                                            <i class="fas fa-save fa-lg"></i>&nbsp;บันทึก
                                                        </a>
                                                    </div>
                                                </div>

                                                <hr />

                                                <div class="row" style="display: inline-flex !important;">
                                                    @foreach (var v in item_select_option) {
                                                        <div class="col-md-2 pr-0">
                                                            <DxCheckBox Checked="@v.IsSelect" CheckedChanged="@((bool value) => ChangeFilter(value, v.Value))"><span style="font-size:small;">@v.Description</span></DxCheckBox>
                                                        </div>
                                                        @*<br />*@
                                                    }
                                                </div>


                                            </div>
                                        </div>

                                            </TabStripTab>
                                           
                                            <TabStripTab Title="TransactionLog">
                                            </TabStripTab>

                                        </TelerikTabStrip>

                                    </div>
                                    <div class="col-md-1 text-end">
                                        <h3>
                                            @if (!string.IsNullOrEmpty(itemService.DocSet.Info.TypeID)) {
                                                <span class="badge rounded-pill bg-primary">@itemService.DocSet.Info.TypeID</span>
                                            }
                                        </h3>
                                    </div>
                                </div>
                            </div>
                          

                        </div>
                    </div>
                </div>

            </div>
        </div>

    </ContentTemplate>
</SpinLoader>

@code {

    [Parameter] public string pagecomefrom { get; set; }
    bool isLoading = true;
    bool isUploading = false;
    bool isShowNew = true;
    bool isShowDelete = true;
    bool isShowSave = true;
    string menuCaption = "";
    string menuGroupCaption = "";



    public bool Itemreadonly { get; set; } = false;
    public string searchText { get; set; } = "";
    DateTime? DatePriceFr = DateTime.Now.Date;
    DateTime? DatePriceTo = DateTime.Now.Date;

    DateTime? dtPointDateBegin = DateTime.Now.Date;
    DateTime? dtPointDateEnd = DateTime.Now.Date;

    public string SelectComID { get; set; } = "";
    public string SelectShipTo { get; set; } = "";
    public string SelectPriceTaxcon { get; set; } = "";
    public string SelectUseLevel { get; set; } = "0";

    public string PriceInItem { get; set; }

    public string AmtPerPointRate { get; set; }
    public string ExpireInMont { get; set; }

    public string Price { get; set; }
    public string Cost { get; set; }
    public string Sort { get; set; }

    public bool IsVisible { get; set; } = false;
    public string ImageUrl { get; set; } = "";

    public decimal QtyInBaseUnit { get; set; } = 1;
    public decimal QtyInThisUnit { get; set; } = 1;
    public string ItemInUnit { get; set; } = "";

    List<SelectOption> item_select_option = new List<SelectOption>();
    List<CompanyService.CompanyInfoList> ListCompany = new List<CompanyService.CompanyInfoList>();
    List<ShipToService.ShipTo> ListShipTo = new List<ShipToService.ShipTo>();

    List<MasterTypeLine> listType { get; set; }
    List<MasterTypeLine> ListUnit { get; set; }

    List<MasterTypeLine> CboUnitInItem { get; set; }

    List<MasterTypeLine> listSelectType { get; set; }
    List<MasterTypeLine> ListCate { get; set; }
    List<VendorInfo> ListVendor { get; set; }
    List<MasterTypeLine> listPriceTaxcon { get; set; }
    List<SelectOption> ListUseLevel { get; set; }
    List<FilesInfo> upload_file = new List<FilesInfo>();
    public string SelectType { get; set; } = "";


    int ActiveTabIndex { get; set; } = 0;
    bool ShowFilterRow = false;
    IEnumerable<vw_ItemInfo> ListItemInfo;
    TelerikGrid<vw_ItemInfo> dxDataGrid { get; set; }

 

    protected override async Task OnInitializedAsync() {

        pageHistory.AddPageToHistory(nav.Uri);
        await Task.Run(() => login.CheckLogin());
        await Task.Run(() => CheckIsRefresh());
        await Task.Run(LoadData);
        LoadDropDownList();
        await Task.Run(ListGridSearch);
        await InvokeAsync(StateHasChanged);
    }

    async Task CheckIsRefresh() {
        string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        string com = login.LoginInfo.CurrentCompany.CompanyID;
        string user = login.LoginInfo.CurrentUser;
        if (itemService.DocSet == null) {
            var docid = await sessionStorage.GetItemAsync<string>(ItemService.sessionActiveId);
            if (docid == null) {
                itemService.DocSet = ItemService.NewTransaction(user, rcom);
                itemService.DocSet.Info.CreatedBy = user;
            }

            if (!string.IsNullOrEmpty(docid)) {
                itemService.DocSet = itemService.GetDocSet(docid, rcom);
            } else {
                itemService.DocSet = ItemService.NewTransaction(rcom, com);
                itemService.DocSet.Info.CreatedBy = user;
            }
        }
    }

    private void LoadDropDownList() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        List<string> filter_Itemtype = new List<string>() { "DISCOUNT" };
        var Itemtype = MasterTypeService.ListType("", "ITEM TYPE", true);
        Itemtype = Itemtype.Where(o => !filter_Itemtype.Contains(o.ValueTXT)).ToList();
        listType = Itemtype;
        listSelectType = Itemtype;

        List<string> filter_Itemcate = new List<string>() { "DISC PER", "DISC AMT" };
        var Itemcate = MasterTypeService.ListType(rcom, "ITEM CATE", true);
        ListCate = Itemcate.Where(o => !filter_Itemcate.Contains(o.ValueTXT)).ToList();

        ListUnit = MasterTypeService.ListType(rcom, "UNIT", false);

        CboUnitInItem = MasterTypeService.ListType(rcom, "UNIT", false);

        ListVendor = VendorService.ListVendorInfo(login.LoginInfo.CurrentRootCompany.CompanyID);

        ListCompany = CompanyService.ListCompanyInfoUIC(login.LoginInfo, "BRANCH", true);
        SelectComID = ListCompany.FirstOrDefault().CompanyID;

        ListShipTo = ShipToService.ListShipTo();
        SelectShipTo = ListShipTo.FirstOrDefault().ShipToID;

        listPriceTaxcon = MasterTypeService.ListType("", "SALE RPICE TAX CON", false);
        ListUseLevel = ItemService.ListUseLevel();
    }

    async void LoadData() {
        isLoading = true;
        BindData();
        isLoading = false;
        await SetActiveControl();
        await InvokeAsync(StateHasChanged);

    }

    async Task SetActiveControl() {
        var h = itemService.DocSet.Info;
        isShowSave = true;
        if (h != null) {
            if (h.TypeID == "DISCOUNT") {
                isShowSave = false;
            }
        }
        await CheckPermission();
    }

    async Task CheckPermission() {
        var h = itemService.DocSet.Info;
        if (h.ItemID == "") {
            isShowDelete = false;
        }



        var menu = LogInService.GetMenuInfo(login.LoginInfo, "5901");
        menuCaption = menu.Name;
        menuGroupCaption = LogInService.GetMenuGroup(login.LoginInfo, menu.GroupID).Name;



        if (!login.CanOpen(login.LoginInfo, "5901")) {//5901 สินค้าและบริการ
            nav.NavigateTo("NoPermissionPage");
        }
        if (!login.CanCreate(login.LoginInfo, "5901")) {
            isShowNew = false;
        }
        if (!login.CanDelete(login.LoginInfo, "5901")) {//5901 สินค้าและบริการ
            isShowDelete = false;
        }
        if (!login.CanOpen(login.LoginInfo, "5901")) {
            nav.NavigateTo("NoPermissionPage");
        }
    }

    void BindData() {
        var h = itemService.DocSet.Info;

        if (h.ItemID != "") {
            Itemreadonly = true;
        } else {
            Itemreadonly = false;
        }
        Price = h.Price.ToString("n2");
        Cost = h.Cost.ToString("n2");
        Sort = h.Sort.ToString("n0");

        if (!string.IsNullOrEmpty(h.ItemID)) {
            LoadItemFG(true);
        }
        Task.Run(() => loadProfile());
    }

    async void ListGridSearch() {
        var rcom = login.LoginInfo.CurrentRootCompany.RCompanyID;
        ListItemInfo = ItemService.ListDoc(searchText, rcom, SelectType);

        dxDataGrid?.Rebind();
    }

    //void OnTextChanged(string newValue) {
    //    searchText = newValue;
    //    SearchAction();
    //}
    private void MyOnChangeHandler(object value) {
        searchText = value.ToString();
        SearchAction();
    }
    //void SelectedItemChanged(MasterTypeLine data) {
    //    SelectType = data.ValueTXT;
    //    SearchAction();
    //}
    private void SelectedItemChanged(string data) {
        SelectType = data;
        SearchAction();
    }
    async void SearchAction() {
        //isLoading = true;
        await Task.Run(ListGridSearch);
        //isLoading = false;
        await InvokeAsync(StateHasChanged);
    }

    void GoToItem(vw_ItemInfo data) {
        itemService.DocSet = itemService.GetDocSet(data.ItemID, data.RCompanyID);
        item_select_option = new List<SelectOption>();
        LoadData();

        InvokeAsync(StateHasChanged);
    }

    void AddNewItem() {
        var rcom = login.LoginInfo.CurrentRootCompany.RCompanyID;
        var user = login.LoginInfo.CurrentUser;
        itemService.DocSet = ItemService.NewTransaction(user, rcom);
        LoadData();
        InvokeAsync(StateHasChanged);
    }

   
    async Task OnRowClickHandler(Telerik.Blazor.Components.GridRowClickEventArgs args) {
        var doc = itemService.DocSet;

        var data = args.Item as vw_ItemInfo;
        itemService.DocSet = itemService.GetDocSet(data.ItemID, data.RCompanyID);
        BindData();
        nav.NavigateTo($"Master/ItemDetail/{pagecomefrom}", false);
        await InvokeAsync(StateHasChanged);
    }

    #region Save Item
    bool ValidData() {
        var h = itemService.DocSet.Info;

        bool isvalid = true;
        string Errmsg = "";


        if (String.IsNullOrEmpty(h.TypeID)) {
            Errmsg = "ไม่ได้ระบุ ประเภทสินค้า";
            Swal.FireAsync("", Errmsg, "warning");
            return false;
        }
        if (String.IsNullOrEmpty(h.CateID)) {
            Errmsg = "ไม่ได้ระบุ หมวดสินค้า";
            Swal.FireAsync("", Errmsg, "warning");
            return false;
        }


        return isvalid;
    }

    private void SetPrimaryData() {
        var h = itemService.DocSet.Info;

        decimal xPrice = 0;
        decimal xCost = 0;
        int xSort = 0;
        decimal.TryParse(Price, out xPrice);
        decimal.TryParse(Cost, out xCost);
        int.TryParse(Sort, out xSort);

        if (itemService.DocSet.Info.VendorID == null) {
            itemService.DocSet.Info.VendorID = "";
        }

        itemService.DocSet.Info.Price = xPrice;
        itemService.DocSet.Info.Cost = xCost;
        itemService.DocSet.Info.Sort = xSort;

    }

    void PrepairDataSave() {
        var h = itemService.DocSet.Info;


        h.RCompanyID = login.LoginInfo.CurrentRootCompany.RCompanyID;
        if (h.ItemID == "") {
            h.ItemID = IDRuunerService.GetNewIDV2("ITEM", h.RCompanyID, h.CompanyID, h.CreatedDate.Date, true, "th")[1];
        }
        SetPrimaryData();
    }

    private void Save() {
        PrepairDataSave();
        var rs = ItemService.Save(itemService.DocSet.Info);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            BindData();
            Swal.FireAsync("", "บันทึกสำเร็จ", "success");
            InvokeAsync(StateHasChanged);
        }
    }

    void OnSave() {

        if (!ValidData()) {
            return;
        }
        Save();
    }

    #endregion

    #region ItemPrice

    bool ValidLineData() {
        var h = itemService.DocSet.Info;

        bool isvalid = true;
        string Errmsg = "";


        if (DatePriceFr == null) {
            Errmsg = "ระบุ วันที่เริ่มขาย";
            isvalid = false;
        }
        if (DatePriceTo == null) {
            Errmsg = "ระบุ ขายถึงวันที่";
            isvalid = false;
        }

        if (!isvalid) {
            Swal.FireAsync("", Errmsg, "error");
        }
        return isvalid;
    }


    void AddItemPrice() {
        if (!ValidLineData()) {
            return;
        }

        var h = itemService.DocSet.Info;
        ItemPriceInfo price = ItemService.NewPrice(login.LoginInfo.CurrentUser, login.LoginInfo.CurrentRootCompany.CompanyID);

        price.ItemID = h.ItemID;
        price.CompanyID = SelectComID;
        price.CustID = SelectShipTo;
        price.UseLevel = Convert.ToInt32(SelectUseLevel);

        decimal xPriceInItem = 0;
        decimal.TryParse(PriceInItem, out xPriceInItem);
        price.Price = xPriceInItem;
        price.PriceTaxCondType = SelectPriceTaxcon;
        price.DateBegin = Convert.ToDateTime(DatePriceFr);
        price.DateEnd = Convert.ToDateTime(DatePriceTo);

        var rs = ItemService.AddPrice(price, h.ItemID, login.LoginInfo.CurrentRootCompany.CompanyID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            ResetControlItemPrice();
            Swal.FireAsync("", "เพิ่มสำเร็จ", "success");
            InvokeAsync(StateHasChanged);
        }

    }

    private void ResetControlItemPrice() {
        SelectComID = "";
        PriceInItem = "0";
        SelectUseLevel = "0";
        SelectShipTo = "";
        DatePriceFr = DateTime.Now.Date;
        DatePriceTo = DateTime.Now.Date;
    }

    void GoDeleteItemPrice(vw_ItemPriceInfo data) {
        var rs = ItemService.DeleteItemPrice(data.ID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            InvokeAsync(StateHasChanged);
        }
    }
    #endregion

    #region ItemInPointRate

    bool ValidItemPointData() {
        var h = itemService.DocSet.Info;

        bool isvalid = true;
        string Errmsg = "";


        if (dtPointDateBegin == null) {
            Errmsg = "ระบุ วันที่เริ่มขาย";
            isvalid = false;
        }
        if (dtPointDateEnd == null) {
            Errmsg = "ระบุ ขายถึงวันที่";
            isvalid = false;
        }

        if (!isvalid) {
            Swal.FireAsync("", Errmsg, "error");
        }
        return isvalid;
    }

    void AddItemInPointRate() {
        if (!ValidItemPointData()) {
            return;
        }
        var h = itemService.DocSet.Info;
        ItemInPointRate pointrate = POSItemService.NewItemPoint(login.LoginInfo.CurrentUser, login.LoginInfo.CurrentRootCompany.CompanyID);

        pointrate.ItemID = h.ItemID;
        decimal xAmtPerPointRate = 0;
        decimal.TryParse(AmtPerPointRate, out xAmtPerPointRate);
        pointrate.AmtPerPointRate = xAmtPerPointRate;

        int xExpireInMont = 0;
        int.TryParse(ExpireInMont, out xExpireInMont);
        pointrate.ExpireInMont = xExpireInMont;

        pointrate.DateBegin = Convert.ToDateTime(dtPointDateBegin);
        pointrate.DateEnd = Convert.ToDateTime(dtPointDateEnd);

        var rs = ItemService.AddItemInPointRate(pointrate, login.LoginInfo.CurrentRootCompany.CompanyID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            ResetItemPointControl();
            Swal.FireAsync("", "เพิ่มสำเร็จ", "success");
            InvokeAsync(StateHasChanged);
        }
    }

    private void ResetItemPointControl() {
        AmtPerPointRate = "0";
        dtPointDateBegin = DateTime.Now.Date;
        dtPointDateEnd = DateTime.Now.Date;
        ExpireInMont = "0";
    }

    void GoDeleteItemInPointRate(ItemInPointRate data) {
        var rs = ItemService.DeleteItemInPointRate(data.RateID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            InvokeAsync(StateHasChanged);
        }
    }

    #endregion

    #region ItemUnitConvert

    bool ValidItemUnitConvertData() {
        var h = itemService.DocSet.Info;

        bool isvalid = true;
        string Errmsg = "";

        if (string.IsNullOrEmpty(ItemInUnit)) {
            Errmsg = "ระบุ หน่วย";
            isvalid = false;
        }

        if (!isvalid) {
            Swal.FireAsync("", Errmsg, "error");
        }
        return isvalid;
    }

    void AddItemUnitConvert() {
        if (!ValidItemUnitConvertData()) {
            return;
        }
        var h = itemService.DocSet.Info;
        ItemUnitConvert itemconvert = ItemService.NewItemUnitConvert(login.LoginInfo.CurrentRootCompany.CompanyID);

        itemconvert.ItemID = h.ItemID;
        itemconvert.QtyInBaseUnit = QtyInBaseUnit;
        itemconvert.QtyInThisUnit = QtyInThisUnit;
        itemconvert.ToUnit = ItemInUnit;

        var rs = ItemService.AddItemUnitConvert(itemconvert, itemconvert.RCompanyID, h.UnitID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            ResetItemUnitConvertControl();
            Swal.FireAsync("", "เพิ่มสำเร็จ", "success");
            InvokeAsync(StateHasChanged);
        }
    }

    private void ResetItemUnitConvertControl() {
        ItemInUnit = "";
        QtyInBaseUnit = 1;
        QtyInThisUnit = 1;
    }

    void DeleteItemUnitConvert(vw_ItemUnitConvert data) {
        var rs = ItemService.DeleteItemUnitConvert(data.ID);
        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            InvokeAsync(StateHasChanged);
        }
    }

    #endregion

    #region ItemRelate
    void LoadItemFG(bool isload) {
        var h = itemService.DocSet.Info;
        var query = ItemService.ListViewItemByType("FG", login.LoginInfo.CurrentRootCompany.CompanyID).Where(o => o.ItemID != h.ItemID).ToList();
        var item_relate = ItemService.ListItemRelateByMasterItemID(h.ItemID, login.LoginInfo.CurrentRootCompany.CompanyID);
        int i = 0;
        foreach (var d in query.OrderBy(o => o.Name1)) {
            var exist = item_select_option.Where(o => o.Value == d.ItemID).FirstOrDefault();
            if (exist == null) {
                i++;
                SelectOption o = new SelectOption();
                o.IsSelect = false;
                o.Sort = i;
                o.Value = d.ItemID;
                o.Description = d.Name1;
                item_select_option.Add(o);
            }
        }
        if (isload) {
            foreach (var l in item_relate) {
                var select_item = item_select_option.Where(o => o.Value == l.RelateItemID).FirstOrDefault();
                select_item.IsSelect = true;
            }
        }
    }

    async Task ChangeFilter(bool isCheck, string value) {
        var s = item_select_option.Where(o => o.Value == value).FirstOrDefault();
        s.IsSelect = isCheck;
        LoadItemFG(false);
        await InvokeAsync(StateHasChanged);
    }

    void AddItemRelate() {
        var h = itemService.DocSet.Info;
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        int count_item_select = item_select_option.Where(o => o.IsSelect == false).Count();
        if (count_item_select == item_select_option.Count()) {
            Swal.FireAsync("", "!! ไม่ได้เลือกตัวสินค้า ONTOP", "error");
            return;
        }
        isLoading = true;
        List<ItemRelate> data = new List<ItemRelate>();
        foreach (var l in item_select_option.Where(o => o.IsSelect == true)) {
            ItemRelate IRelate = new ItemRelate();
            IRelate.RCompanyID = rcom;
            IRelate.CompanyID = "";
            IRelate.MasterItemID = h.ItemID;
            IRelate.RelateItemID = l.Value;
            IRelate.RelateType = "ONTOP";
            IRelate.Remark = "";
            IRelate.IsActive = true;
            data.Add(IRelate);
        }

        var rs = ItemService.AddItemItemRelate(data, h.ItemID, login.LoginInfo.CurrentRootCompany.CompanyID);

        if (rs.Result != "ok") {
            Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            itemService.DocSet = itemService.GetDocSet(itemService.DocSet.Info.ItemID, itemService.DocSet.Info.RCompanyID);
            BindData();
            Swal.FireAsync("", "บันทึกสำเร็จ", "success");
            isLoading = false;
            InvokeAsync(StateHasChanged);
        }
        isLoading = false;
    }

    #endregion

    async void Back() {

        string forwardurl = "";
        switch (pagecomefrom) {
            case "web1":
                var reqInfo = LogInCrossAppService.CreateReqInfo("KYPOS", login.LoginInfo.CurrentRootCompany.CompanyID, login.LoginInfo.CurrentUser, forwardurl);
                string rootappurl = login.GetRootApp($"/Account/MyLogin/LoginFromApp?reqid={reqInfo.ReqID}");
                nav.NavigateTo(rootappurl);
                break;
            case "web2":
                var url = pageHistory.GetGoBackPage();
                nav.NavigateTo("Dashboard/StartBoard");
                await InvokeAsync(StateHasChanged);
                break;

        }
    }



    #region profile management

    async Task loadProfile() {
        isUploading = true;

        var i = itemService.DocSet.Info;
        ImageUrl = FileGo.GetThumbUrl(i.RCompanyID, i.CompanyID, FileGo.Type_ItemProfile, i.ItemID);
        if (string.IsNullOrEmpty(ImageUrl)) {
            ImageUrl = "/sale/assets/img/applogo.png";
            //\wwwroot\assets\img\
        }
        isUploading = false;
        await InvokeAsync(StateHasChanged);
    }
    async Task OnDeleteProfile() {
        try {
            SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions {
                    Title = "Warning",
                    Text = $"ต้องการลบรูปใช่หรือไม่",
                    ShowCancelButton = true,
                    ConfirmButtonText = "Yes",
                    CancelButtonText = "No"
                });
            if (string.IsNullOrEmpty(result.Value)) {
                return;
            }
            string user = login.LoginInfo.CurrentUser;
            var h = itemService.DocSet.Info;

            isUploading = true;
            var rr = await Task.Run(() => fileGo.DeleteFile(h.RCompanyID, h.CompanyID, FileGo.Type_ItemProfile, h.ItemID, user));
            if (rr.Result == "ok") {
                await loadProfile();
            } else {
                await Swal.FireAsync("Error", rr.Message1, "error");
            }

        } catch {
        } finally {
            isUploading = false;
        }
    }

    async Task DownLoadImage() {
        try {
            var i = itemService.DocSet.Info;
            string file_url = FileGo.GetFileUrl(i.RCompanyID, i.CompanyID, FileGo.Type_ItemProfile, i.ItemID);
            if (!string.IsNullOrEmpty(file_url)) {
                nav.NavigateTo(file_url, true);
            }
        } catch {

        }
    }


    async Task OnInputFileChanged(InputFileChangeEventArgs e) {
        isUploading = true;
        var files = e.GetMultipleFiles(maximumFileCount: 1); // get the files selected by the users
        var h = itemService.DocSet.Info;
        if (string.IsNullOrEmpty(h.ItemID)) {
            await Swal.FireAsync("Error", "Save before upload", "error");
            return;
        }
        string user = login.LoginInfo.CurrentUser;
        try {
            upload_file = new List<FilesInfo>();
            foreach (var file in e.GetMultipleFiles(1)) {
                using var stream = file.OpenReadStream(maxAllowedSize: (1024 * 1024 * 15));
                using var ms = new MemoryStream();
                await stream.CopyToAsync(ms);
                var nfile = FileGo.NewFilesInfo(FileGo.Type_ItemProfile, h.RCompanyID, h.CompanyID, h.ItemID);
                nfile.data = Convert.ToBase64String(ms.ToArray());
                // nfile.data = buf;
                nfile.file_type = file.ContentType;
                nfile.fileName = file.Name;
                upload_file.Add(nfile);

            }
            await Upload();
        } catch (Exception ex) {
            await Swal.FireAsync("Error", ex.Message, "error");
        } finally {
            isUploading = false;
        }
    }

    async Task Upload() {
        try {
            var h = itemService.DocSet.Info;
            string user = login.LoginInfo.CurrentUser;
            isUploading = true;
            var login_filego = FileGo.GetFileGoLogin();
            string dataEndpointUri = $"{login_filego.RootUrl}/api/xfiles/XFilesService/UploadFileToDB";
            I_BasicResult update_result = new I_BasicResult();
            var query = await Task.Run(() => clientService.Post<I_BasicResult>(dataEndpointUri, upload_file));
            if (query.StatusCode != "OK") {
                update_result.Result = "fail";
                update_result.Message1 = query.StatusCode;
            } else {
                update_result = (I_BasicResult)query.Result;
                if (update_result.Result == "fail") {
                    upload_file.Clear();
                    await Swal.FireAsync("Error", update_result.Message1, "error");
                    //ShowMessage(false, update_result.Message1);
                } else {
                    //ShowMessage(true, "Upload Success");

                    var xfile_ref = FileGo.Convert2XFilesRef(upload_file, login.LoginInfo.CurrentUser);
                    var rr = FileGo.SaveXFileRef(xfile_ref);
                    var rrr = await Task.Run(() => fileGo.DeleteOldFileAfterSave(h.RCompanyID, h.CompanyID, FileGo.Type_ItemProfile, h.ItemID, user));
                    await loadProfile();
                }
            }
        } catch {
        } finally {
            isUploading = false;
        }
    }


    async void Convert2File() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var rr = XFilesService.ConvertByte2File(rcom, "", "ITEMS_PHOTO_PROFILE");
        if (rr.Result == "fail") {
            await Swal.FireAsync("Error", rr.Message1, "error");
        } else {
            await Swal.FireAsync("Success", "สร้างรูปใน Server สำเร็จ", "success");
        }
    }
    #endregion

}
