@page "/POS/POSSelectTable/{pagecomefrom}"

@using Robot.Data.DA.POSSY
@using Robot.Data.DA
@using Robot.Data.GADB.TT
@using System.Threading;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore
@using static Robot.Data.DA.POSSY.ShipToService
@using Blazored.LocalStorage

@inject POSService posService
@inject LogInService login
@inject IJSRuntime JsRuntime
@inject NavigationManager nav
@inject TableInfoService tableService
@inject ILocalStorageService localStorage
@inject PageHistoryState pageHistory

<div class="row pt-2 px-2">
    <div class="col-12">
        <div class="card" style="border-radius: 10px;">
            <div class="card-body p-3">
                <div class="row">
                    <div class="col-md-1 col-sm-2 col-2 text-left">
                        <a ID="btnback" class="" @onclick="@Back">
                            <img src="/SALE/assets/img/back.png" style="width:2rem;" />
                        </a>&nbsp;
                    </div>
                    <div class="col-md-11 col-sm-10 col-10 pl-0 text-left">
                        <strong style="font-size:2rem; color:crimson;">เลือกโต๊ะ</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row pt-1 px-2">
    <div class="col-12">



        <TelerikListView Data=@Tables
                         Pageable="true"
                         PageSize="1000">
            <HeaderTemplate>
            </HeaderTemplate>
            <Template>
                <div class="card w-100 m-0 px-2 py-2 mt-2">
                    <div class="card-body p-0 px-2 w-100">
                        <a class="btn p-0 w-100" style="height: auto;" @onclick="@(() => GoToPOSSale(@context))">

                            <div class="row pt-2">
                                <div class="col-4 pt-1 text-left">
                                    <img src='@context.Image' alt="" style="width: 4rem;" />
                                </div>
                                <div class="col-8 text-right pt-3">
                                    <span style="color: black; font-size: 2rem; font-weight: bold;">@context.TableName &nbsp;</span>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>


            </Template>
        </TelerikListView>





    </div>
</div>


@code {
    bool isLoading = true;
    [Parameter]
    public string pagecomefrom { get; set; } = "";
    //public LogInService.LoginSet login { get; set; }


    IEnumerable<TableInfoService.POS_TableModel> Tables;


    protected override async Task OnInitializedAsync() {
        //posService.DocSet = await Task.Run(() => posService.GetSessionDocSet());
        if (login.LoginInfo == null) {
            login.LoginInfo = await Task.Run(login.GetLoginSessionLog);
            if (login.LoginInfo == null) {
                nav.NavigateTo("Login", true);
            }
        }
        await Task.Run(LoadData);
        isLoading = false;
    }
    void LoadData() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;
        Tables = TableInfoService.ListTable(rcom, com);
    }
    async void GoToPOSSale(TableInfoService.POS_TableModel data) {
        posService.DocSet.Head.TableID = data.TableID;
        posService.DocSet.Head.TableName = data.TableName;
        //await Task.Run(() => posService.SetSessionDocSet(posService.DocSet));
        nav.NavigateTo($"POS/POSSaleDetail/{pagecomefrom}", false);
        await InvokeAsync(StateHasChanged);

    }

    async void Back() {

        //nav.NavigateTo($"POS/POSSaleDetail", false);
        //await InvokeAsync(StateHasChanged);
        await Task.Run(() => login.SetLoginSessionLog(login.LoginInfo));

        var url = pageHistory.GetGoBackPage();
        nav.NavigateTo(url);
        await InvokeAsync(StateHasChanged);

    }

}



