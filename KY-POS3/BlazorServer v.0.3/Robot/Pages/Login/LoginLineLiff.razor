@page "/Login/LoginLineLiff/{lineid}/{logintomodule}"


@using CurrieTechnologies.Razor.SweetAlert2
@using Robot.Data.DA.User
@using System.Threading;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore
@using Robot.Data.GADB.TT

@using Blazored.LocalStorage
@using Blazored.SessionStorage
@using Robot.Data.ML
@using Robot.Data


@inject SweetAlertService Swal
@inject IJSRuntime JsRuntime
@inject NavigationManager nav
@inject CustomerService customerService
@inject ILocalStorageService localStorage
@inject ISessionStorageService sessionStorage
@inject AuthenticationStateProvider authStateProvider
@inject LogInService login


<SpinLoader IsLoading="isLoading">
    <LoadingTemplate>
        <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
            <br /><br />
            <div class="row pt-2">
                <div class="col-10 mx-auto">
                    <label style="color:orange; font-size:x-large;">... รอโหลดสักครู่ ...</label><br /><br /><br /><br />
                    <CircleFade Color="orange" Size="100px" Center="true" />

                </div>
            </div>
        </div>


    </LoadingTemplate>
    <ContentTemplate>
        @if (isError) {
            <div class="row text-center">
                <div class="col-12">
                    <h1><span style="color:red">Error : Parameter error.</span> </h1>
                </div>
            </div>
        }

        <div class="card rounded" style="border-radius: 1.25rem !important;" hidden="@isHiddenLoginDiv">
            <div class="card-body">
                <div class="row pb-3">
                    <div class="col-md-12 text-center">
                        <div class="pb-2"><img src="/sale/assets/img/applogo.png" style="width: 100px;" /></div>
                        <div><h3 class="font-weight-bold">ล็อกอินเข้าสู่ระบบ</h3></div>
                    </div>
                </div>
                <div class="row pt-2" style="font-size:medium;">
                    <div class="col-md-12">
                        <span class="font-weight-bold">Username</span>
                        <input type="text" class="form-control" id="username" placeholder="กรุณากรอกชื่อผู้ใช้" @bind="@userName">
                    </div>
                </div>
                <div class="row pt-2" style="font-size:medium;">
                    <div class="col-md-12">
                        <span class="font-weight-bold">Password</span>
                        <input type="password" class="form-control" id="password1" placeholder="กรุณากรอกรหัสผ่าน" @bind="@password">
                    </div>
                </div>
                <div class="row pt-4 pb-2">
                    <div class="col-md-12">
                        <button type="button" @onclick="@LoginFirstTime"
                                class="btn btn-block btn-lg" style="background-color: #ff9f1a; color: white; width: 100%">
                            เข้าระบบ
                        </button>
                    </div>
                </div>

            </div>
        </div>


    </ContentTemplate>
</SpinLoader>
@code {
    [Parameter]
    public string lineid { get; set; } = "";
    [Parameter]
    public string logintomodule { get; set; } = "";


    bool isError = false;
    bool isHiddenLoginDiv = true;
    bool isLoading = true;

    string userName { get; set; }
    string password { get; set; }

    protected override void OnInitialized() {


    }

    protected override async Task OnInitializedAsync() {
        await sessionStorage.SetItemAsync("lineid", lineid);
        login.LoginInfo = await Task.Run(() => LogInService.LoginByLineId(lineid));
        if (login.LoginInfo.LoginResult == "ok") {
            ((AuthStateProvider)authStateProvider).MarkUserAsAuthenticated(login.LoginInfo.CurrentUser);
            GoToModule();
        } else {
            //GoToErrorPage();
            isHiddenLoginDiv = false;
            isLoading = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    void GoToModule() {
        if (logintomodule == "liffmenu") {
            nav.NavigateTo("Menu/LineMenu");
        }
    }

    void GoToErrorPage() {
        isError = true;
    }

    async void LoginFirstTime() {
        isLoading = true;
        var xline = await sessionStorage.GetItemAsync<string>("lineid");
        login.LoginInfo = LogInService.Login(userName, password, "", "");
 
        if (login.LoginInfo.LoginResult == "ok") {
            var rline = LoginLine.CreateLineLogin(xline, userName);

            isLoading = false;
            isHiddenLoginDiv = true;
            ((AuthStateProvider)authStateProvider).MarkUserAsAuthenticated(login.LoginInfo.CurrentUser);
            GoToModule();
        } else {
            await Swal.FireAsync("", "ชื่อหรือรหัสผ่านไม่ถูกต้อง", "error");
        }
    }

}
