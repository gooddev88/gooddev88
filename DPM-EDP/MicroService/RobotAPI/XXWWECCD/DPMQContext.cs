// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace RobotAPI.XXWWECCD
{
    public partial class DPMQContext : DbContext
    {
        public DPMQContext()
        {
        }

        public DPMQContext(DbContextOptions<DPMQContext> options)
            : base(options)
        {
        }

        public virtual DbSet<emc_sk1all_cms> emc_sk1all_cms { get; set; }
        public virtual DbSet<est_stock_cms> est_stock_cms { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<emc_sk1all_cms>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("emc_sk1all_cms", "etl");

                entity.Property(e => e.ad_name).HasMaxLength(255);

                entity.Property(e => e.ad_posi).HasMaxLength(255);

                entity.Property(e => e.auditdate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.brand).HasMaxLength(50);

                entity.Property(e => e.budgetdesc).HasMaxLength(50);

                entity.Property(e => e.chassisno).HasMaxLength(50);

                entity.Property(e => e.createdate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.datedispose).HasColumnType("timestamp without time zone");

                entity.Property(e => e.datefirst).HasColumnType("timestamp without time zone");

                entity.Property(e => e.daterate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.daterec).HasColumnType("timestamp without time zone");

                entity.Property(e => e.desctha).HasMaxLength(255);

                entity.Property(e => e.ecde).HasMaxLength(10);

                entity.Property(e => e.engbrand).HasMaxLength(50);

                entity.Property(e => e.engmodel).HasMaxLength(50);

                entity.Property(e => e.engno).HasMaxLength(50);

                entity.Property(e => e.etl_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.fueltype).HasMaxLength(5);

                entity.Property(e => e.groupcode).HasMaxLength(5);

                entity.Property(e => e.groupname).HasMaxLength(255);

                entity.Property(e => e.imagefile).HasMaxLength(50);

                entity.Property(e => e.imageupdate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.inttials).HasMaxLength(50);

                entity.Property(e => e.licdate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.licdesc).HasMaxLength(50);

                entity.Property(e => e.licno).HasMaxLength(50);

                entity.Property(e => e.mcmodel).HasMaxLength(50);

                entity.Property(e => e.moterno).HasMaxLength(50);

                entity.Property(e => e.motorbrand).HasMaxLength(50);

                entity.Property(e => e.motormodel).HasMaxLength(50);

                entity.Property(e => e.motorunit).HasMaxLength(5);

                entity.Property(e => e.oldcode).HasMaxLength(50);

                entity.Property(e => e.sampname).HasMaxLength(255);

                entity.Property(e => e.sk2).HasMaxLength(5);

                entity.Property(e => e.sourcesdesc).HasMaxLength(50);

                entity.Property(e => e.sprovincename).HasMaxLength(255);

                entity.Property(e => e.srcbudget).HasMaxLength(5);

                entity.Property(e => e.stambonname).HasMaxLength(255);

                entity.Property(e => e.sv_name).HasMaxLength(255);

                entity.Property(e => e.sv_posi).HasMaxLength(255);

                entity.Property(e => e.transferfrom).HasMaxLength(50);

                entity.Property(e => e.transmissdesc).HasMaxLength(50);

                entity.Property(e => e.typecode).HasMaxLength(5);

                entity.Property(e => e.typedesc).HasMaxLength(150);

                entity.Property(e => e.typename_th).HasMaxLength(255);

                entity.Property(e => e.unitname).HasMaxLength(255);

                entity.Property(e => e.updatedate).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<est_stock_cms>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("est_stock_cms", "etl");

                entity.Property(e => e.create_time).HasColumnType("timestamp without time zone");

                entity.Property(e => e.department_name).HasMaxLength(255);

                entity.Property(e => e.etl_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.locate_name).HasMaxLength(255);

                entity.Property(e => e.province_name).HasMaxLength(255);

                entity.Property(e => e.stock_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.stuff_code).HasMaxLength(100);

                entity.Property(e => e.stuff_name).HasMaxLength(255);

                entity.Property(e => e.stuff_price).HasPrecision(8, 2);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}