// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using RobotWasm.Shared.Data.DimsDB;
using RobotWasm.Shared.Data.GaDB;

namespace RobotWasm.Server.Data.CimsDB.TT {
    public partial class cimsContext : DbContext {
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) {
            optionsBuilder.UseNpgsql(Globals.CimsConn);
        }

        public cimsContext() { }

        public cimsContext(DbContextOptions<cimsContext> options)
            : base(options) {
        }

        public virtual DbSet<a_province> a_province { get; set; }
        public virtual DbSet<api_cate> api_cate { get; set; }
        public virtual DbSet<publishdoc_cate> publishdoc_cate { get; set; }
        public virtual DbSet<api_master> api_master { get; set; }
        public virtual DbSet<api_tag> api_tag { get; set; }
        public virtual DbSet<api_param_res> api_param_res { get; set; }
        public virtual DbSet<board_master> board_master { get; set; }
        public virtual DbSet<board_authen> board_authen { get; set; }
        public virtual DbSet<company_group_info> company_group_info { get; set; }
        public virtual DbSet<company_info> company_info { get; set; }
        public virtual DbSet<custom_board_in_user> custom_board_in_user { get; set; }
        public virtual DbSet<custom_widget_master> custom_widget_master { get; set; }
        public virtual DbSet<custom_widget_in_user> custom_widget_in_user { get; set; }
        public virtual DbSet<custom_widget_param_in_user> custom_widget_param_in_user { get; set; }
        //     public virtual DbSet<custom_widget_param_master> custom_widget_param_master { get; set; }
        public virtual DbSet<master_type_head> master_type_head { get; set; }
        public virtual DbSet<master_type_line> master_type_line { get; set; }
        public virtual DbSet<news_info> news_info { get; set; }
        public virtual DbSet<publish_doc_head> publish_doc_head { get; set; }
        public virtual DbSet<publish_doc_line> publish_doc_line { get; set; }
        public virtual DbSet<trans_logs> trans_logs { get; set; }
        public virtual DbSet<doc_head> doc_head { get; set; }
        public virtual DbSet<icon_set> icon_set { get; set; }
        public virtual DbSet<idgenerator> idgenerator { get; set; }   
        public virtual DbSet<dqt_data_logs> dqt_data_logs { get; set; }
        public virtual DbSet<mas_province> mas_province { get; set; }
        public virtual DbSet<vw_doc_head> vw_doc_head { get; set; }
        public virtual DbSet<vw_icon_set> vw_icon_set { get; set; }
        public virtual DbSet<widget_in_user> widget_in_user { get; set; }
        public virtual DbSet<widget_master> widget_master { get; set; }
        public virtual DbSet<board_in_user> board_in_user { get; set; }
        public virtual DbSet<user_info> user_info { get; set; }
        public virtual DbSet<user_in_group> user_in_group { get; set; }
        public virtual DbSet<usergroup_in_api> usergroup_in_api { get; set; }
        public virtual DbSet<usergroup_in_board> usergroup_in_board { get; set; }
        public virtual DbSet<usergroup_in_menu> usergroup_in_menu { get; set; }
        public virtual DbSet<usergroup_info> usergroup_info { get; set; }
        public virtual DbSet<usermenu> usermenu { get; set; }
        public virtual DbSet<xfile_location> xfile_location { get; set; }
        public virtual DbSet<xfile_ref> xfile_ref { get; set; }
        //public virtual DbSet<vw_permission_group_in_menu> vw_permission_group_in_menu { get; set; }
        public virtual DbSet<vw_permission_in_board> vw_permission_in_board { get; set; }
        public virtual DbSet<vw_api_cate> vw_api_cate { get; set; }
        public virtual DbSet<vw_publishdoc_cate> vw_publishdoc_cate { get; set; }
        public virtual DbSet<vw_uim> vw_uim { get; set; }
        public virtual DbSet<vw_user_in_group> vw_user_in_group { get; set; }
        public virtual DbSet<vw_board_in_user> vw_board_in_user { get; set; }
        public virtual DbSet<vw_permission_in_menu> vw_permission_in_menu { get; set; }
        public virtual DbSet<vw_usergroup_in_board> vw_usergroup_in_board { get; set; }
        public virtual DbSet<vw_publish_doc_line> vw_publish_doc_line { get; set; }
        public virtual DbSet<vw_trans_logs> vw_trans_logs { get; set; }
        public virtual DbSet<vw_usergroup_info> vw_usergroup_info { get; set; }
        public virtual DbSet<vw_board_master> vw_board_master { get; set; }
        public virtual DbSet<vw_widget_in_user> vw_widget_in_user { get; set; }
        public virtual DbSet<vw_api_master> vw_api_master { get; set; }
        public virtual DbSet<vw_xfile_ref> vw_xfile_ref { get; set; }
        public virtual DbSet<vw_custom_board_in_user> vw_custom_board_in_user { get; set; }
        public virtual DbSet<vw_custom_widget_in_user> vw_custom_widget_in_user { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder) {
            modelBuilder.Entity<a_province>(entity => {
                entity.Property(e => e.pcode).HasMaxLength(255);

                entity.Property(e => e.pname).HasMaxLength(255);

                entity.Property(e => e.type_p).HasMaxLength(255);

                entity.Property(e => e.type_soilder).HasMaxLength(255);
            });


            modelBuilder.Entity<dqt_data_logs>(entity => {
                entity.HasKey(e => e.log_id)
                    .HasName("dqt_data_logs_pkey");

                entity.ToTable("dqt_data_logs", "etl");

                entity.Property(e => e.log_id).ValueGeneratedNever();

                entity.Property(e => e.data_set_id)
                    .HasMaxLength(200)
                    .HasComment("รหัสชุดข้อมูล");

                entity.Property(e => e.filename)
                    .HasMaxLength(500)
                    .HasComment("ชื่อไฟล์นำเข้า");

                entity.Property(e => e.job_date).HasComment("วันที่ job run");

                entity.Property(e => e.job_id)
                    .HasMaxLength(150)
                    .HasComment("GUID for each job run");

                entity.Property(e => e.job_message)
                    .HasMaxLength(99999)
                    .HasComment("ข้อความจาก job");

                entity.Property(e => e.job_result)
                    .HasMaxLength(255)
                    .HasComment("success / warning /error");

                entity.Property(e => e.job_time).HasComment("เวลา job run");
            });

            modelBuilder.Entity<vw_permission_in_board>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
       modelBuilder.Entity<vw_permission_in_menu>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
    modelBuilder.Entity<vw_uim>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
   modelBuilder.Entity<vw_user_in_group>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
   modelBuilder.Entity<vw_usergroup_in_board>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
   modelBuilder.Entity<vw_usergroup_info>(entity => {
                entity.HasKey(e => new { e.rowkey  });
            });
            modelBuilder.Entity<api_master>(entity => {
                entity.Property(e => e.api_desc).HasMaxLength(1000);

                entity.Property(e => e.api_id).HasMaxLength(50);

                entity.Property(e => e.api_name).HasMaxLength(150);

                entity.Property(e => e.api_type).HasMaxLength(50);

                entity.Property(e => e.api_url).HasMaxLength(500);

                entity.Property(e => e.authen).HasMaxLength(50);

                entity.Property(e => e.base_url).HasMaxLength(500);

                entity.Property(e => e.cate).HasMaxLength(50);

                entity.Property(e => e.contact).HasMaxLength(500);

                entity.Property(e => e.data_source).HasMaxLength(150);

                entity.Property(e => e.method).HasMaxLength(50);

                entity.Property(e => e.output_sample).HasMaxLength(10485760);

                entity.Property(e => e.owner_code).HasMaxLength(50);

                entity.Property(e => e.parameter_sample).HasMaxLength(10485760);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.source_api_url).HasMaxLength(500);

                entity.Property(e => e.source_cate).HasMaxLength(50);

                entity.Property(e => e.source_connection_code).HasMaxLength(50);

                entity.Property(e => e.update_frequency).HasMaxLength(50);

                entity.Property(e => e.url_page).HasMaxLength(50);

                entity.Property(e => e.version).HasMaxLength(50);
            });

            modelBuilder.Entity<board_master>(entity => {
                entity.Property(e => e.board_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.description)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(200);
            });
            modelBuilder.Entity<board_authen>(entity => {
                entity.Property(e => e.authen_id).HasMaxLength(100);

                entity.Property(e => e.authen_name).HasMaxLength(255);

                entity.Property(e => e.base_url).HasMaxLength(255);

                entity.Property(e => e.board_pass).HasMaxLength(255);

                entity.Property(e => e.board_username).HasMaxLength(255);
            });

            modelBuilder.Entity<widget_in_user>(entity => {
                entity.Property(e => e.board_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.username)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.widget_id)
                    .IsRequired()
                    .HasMaxLength(50);
            });
            modelBuilder.Entity<master_type_head>(entity => {
                entity.Property(e => e.master_type_id).HasMaxLength(255);

                entity.Property(e => e.master_type_name).HasMaxLength(500);

                entity.Property(e => e.remark).HasMaxLength(500);
            });

            modelBuilder.Entity<master_type_line>(entity => {
                entity.Property(e => e.id).UseIdentityAlwaysColumn();

                entity.Property(e => e.desc1).HasMaxLength(255);

                entity.Property(e => e.desc2).HasMaxLength(255);

                entity.Property(e => e.master_type_id).HasMaxLength(255);

                entity.Property(e => e.master_type_name).HasMaxLength(255);

                entity.Property(e => e.value_txt).HasMaxLength(255);
            });

            modelBuilder.Entity<doc_head>(entity => {
                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.doc_cate_id).HasMaxLength(255);

                entity.Property(e => e.doc_desc).HasMaxLength(2000);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doc_remark).HasMaxLength(2000);

                entity.Property(e => e.doc_type_id).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.publish_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<vw_doc_head>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_doc_head");

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.doc_cate_id).HasMaxLength(255);

                entity.Property(e => e.doc_desc).HasMaxLength(2000);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doc_remark).HasMaxLength(2000);

                entity.Property(e => e.doc_type_id).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.publish_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<vw_board_in_user>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_board_in_user");

                entity.Property(e => e.board_description).HasMaxLength(1000);

                entity.Property(e => e.board_id).HasMaxLength(50);

                entity.Property(e => e.board_name).HasMaxLength(200);

                entity.Property(e => e.layout_json_h).HasColumnType("character varying");

                entity.Property(e => e.layout_json_v).HasColumnType("character varying");

                entity.Property(e => e.username).HasColumnType("character varying");
            });
            modelBuilder.Entity<user_info>(entity => {
                entity.Property(e => e.api_token).HasMaxLength(255);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.email).HasMaxLength(255);

                entity.Property(e => e.first_name).HasMaxLength(255);

                entity.Property(e => e.last_name).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.password).HasMaxLength(500);

                entity.Property(e => e.username).HasMaxLength(250);
            });
            modelBuilder.Entity<widget_master>(entity => {
                entity.Property(e => e.board_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.description)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.name)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.widget_id)
                    .IsRequired()
                    .HasMaxLength(50);
            });
            modelBuilder.Entity<custom_board_in_user>(entity => {
                entity.Property(e => e.board_desc).HasMaxLength(255);

                entity.Property(e => e.board_id).HasMaxLength(255);

                entity.Property(e => e.board_name).HasMaxLength(255);

                entity.Property(e => e.board_type).HasMaxLength(255);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.username).HasMaxLength(255);
            });

            modelBuilder.Entity<custom_widget_master>(entity => {
                entity.Property(e => e.widget_desc).HasMaxLength(255);

                entity.Property(e => e.widget_id).HasMaxLength(255);
            });

            modelBuilder.Entity<custom_widget_in_user>(entity => {
                entity.Property(e => e.board_id).HasMaxLength(255);
                 

                entity.Property(e => e.username).HasMaxLength(255);

                entity.Property(e => e.widget_id).HasMaxLength(255);
            });

            modelBuilder.Entity<custom_widget_param_in_user>(entity => {
                entity.Property(e => e.data).HasMaxLength(1000);

                entity.Property(e => e.data_type).HasMaxLength(255);

                entity.Property(e => e.param_id).HasMaxLength(255);

                entity.Property(e => e.username).HasMaxLength(255);
            });
            modelBuilder.Entity<vw_xfile_ref>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_xfile_ref");

                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.file_id).HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.suburl).HasMaxLength(255);
            });

            modelBuilder.Entity<xfile_location>(entity => {
                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.login_name).HasMaxLength(255);

                entity.Property(e => e.login_pass).HasMaxLength(255);

                entity.Property(e => e.root_path).HasMaxLength(255);

                entity.Property(e => e.rootpath_id).HasMaxLength(555);

                entity.Property(e => e.rooturl).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<xfile_ref>(entity => {
                entity.Property(e => e.appid).HasColumnType("character varying");

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.suburl).HasMaxLength(255);
            }); modelBuilder.Entity<vw_xfile_ref>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_xfile_ref");

                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.file_id).HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.suburl).HasMaxLength(255);
            });

            modelBuilder.Entity<xfile_location>(entity => {
                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.login_name).HasMaxLength(255);

                entity.Property(e => e.login_pass).HasMaxLength(255);

                entity.Property(e => e.root_path).HasMaxLength(255);

                entity.Property(e => e.rootpath_id).HasMaxLength(555);

                entity.Property(e => e.rooturl).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<xfile_ref>(entity => {
                entity.Property(e => e.appid).HasColumnType("character varying");

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.suburl).HasMaxLength(255);
            }); modelBuilder.Entity<vw_xfile_ref>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_xfile_ref");

                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.file_id).HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.suburl).HasMaxLength(255);
            });

            modelBuilder.Entity<xfile_location>(entity => {
                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.login_name).HasMaxLength(255);

                entity.Property(e => e.login_pass).HasMaxLength(255);

                entity.Property(e => e.root_path).HasMaxLength(255);

                entity.Property(e => e.rootpath_id).HasMaxLength(555);

                entity.Property(e => e.rooturl).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<xfile_ref>(entity => {
                entity.Property(e => e.appid).HasColumnType("character varying");

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.suburl).HasMaxLength(255);
            }); modelBuilder.Entity<vw_xfile_ref>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_xfile_ref");

                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.file_id).HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.suburl).HasMaxLength(255);
            });

            modelBuilder.Entity<xfile_location>(entity => {
                entity.Property(e => e.appid).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.end_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.jwttoken).HasMaxLength(300);

                entity.Property(e => e.jwttoken_expirydate).HasColumnType("timestamp without time zone");

                entity.Property(e => e.login_name).HasMaxLength(255);

                entity.Property(e => e.login_pass).HasMaxLength(255);

                entity.Property(e => e.root_path).HasMaxLength(255);

                entity.Property(e => e.rootpath_id).HasMaxLength(555);

                entity.Property(e => e.rooturl).HasMaxLength(255);

                entity.Property(e => e.rooturl_public).HasMaxLength(255);

                entity.Property(e => e.start_date).HasColumnType("timestamp without time zone");
            });

            modelBuilder.Entity<xfile_ref>(entity => {
                entity.Property(e => e.appid).HasColumnType("character varying");

                entity.Property(e => e.com_id).HasMaxLength(50);

                entity.Property(e => e.created_by).HasMaxLength(255);

                entity.Property(e => e.created_date).HasColumnType("timestamp without time zone");

                entity.Property(e => e.dbname).HasMaxLength(255);

                entity.Property(e => e.dbserver).HasMaxLength(255);

                entity.Property(e => e.doc_id).HasMaxLength(255);

                entity.Property(e => e.doccate).HasMaxLength(255);

                entity.Property(e => e.doctype).HasMaxLength(255);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.fileext).HasMaxLength(255);

                entity.Property(e => e.filename).HasMaxLength(1000);

                entity.Property(e => e.filepath).HasMaxLength(255);

                entity.Property(e => e.filetype).HasMaxLength(255);

                entity.Property(e => e.modified_by).HasMaxLength(255);

                entity.Property(e => e.modified_date).HasColumnType("timestamp(6) without time zone");

                entity.Property(e => e.origin_fileext).HasMaxLength(255);

                entity.Property(e => e.origin_filename).HasMaxLength(1000);

                entity.Property(e => e.rcom_id).HasMaxLength(50);

                entity.Property(e => e.remark).HasMaxLength(1000);

                entity.Property(e => e.rootpath_id).HasMaxLength(255);

                entity.Property(e => e.source_table).HasMaxLength(255);

                entity.Property(e => e.suburl).HasMaxLength(255);
            });

            modelBuilder.Entity<vw_custom_board_in_user>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_custom_board_in_user");

                entity.Property(e => e.board_desc).HasMaxLength(255);

                entity.Property(e => e.board_id).HasMaxLength(255);

                entity.Property(e => e.board_name).HasMaxLength(255);

                entity.Property(e => e.board_type).HasMaxLength(255);

                entity.Property(e => e.username).HasMaxLength(255);
            });
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
