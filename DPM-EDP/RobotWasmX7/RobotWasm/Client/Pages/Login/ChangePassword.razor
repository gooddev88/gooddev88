@page "/ChangePassword"
@using System.IO
@using RobotWasm.Client.Data.Helper;
@using RobotWasm.Shared.Data.ML.Login
@using Telerik.Blazor
@using Telerik.Blazor.Components

<style>
    .btn-link:hover {
        color: #ff00e0;
    }

    .btn-ChangePassword {
        border-radius: 2.3rem;
        background-image: linear-gradient( 19deg, #EA9409 0%, #EEC71A 100%); 
        color: black;
        width: 100%;
    }
    
</style>

        <div class="container-fluid" style="background-color: #21D4FD; background-image: linear-gradient( 19deg, #21D4FD 0%, #B721FF 100%); padding-bottom: 120px;">

            <div class="row">
                <div class="col-xl-4 col-lg-7 col-md-8 col-sm-9 pt-150 col-11 mx-auto my-auto">
                    <div class="card rounded" style="border-radius: 1.25rem !important;">
                        <div class="card-body">
                            <div class="row pb-4 pt-4">
                                <div class="col-md-12 text-center">
                                    <div><h3 class="fw-bold">เปลี่ยนรหัสผ่าน</h3></div>
                                </div>
                            </div>
                            <div class="row pt-2" style="font-size:medium;">
                                <div class="col-md-12">
                                    <span class="font-weight-bold">Username</span>
                                    <input type="text" class="form-control" id="username" placeholder="กรุณากรอกชื่อผู้ใช้" @bind="@userName">
                                </div>
                            </div>
                            <div class="row pt-2" style="font-size:medium;">
                                <div class="col-md-12">
                                    <span class="font-weight-bold">Password</span>
                                    <input type="password" class="form-control" id="password1" placeholder="กรุณากรอกรหัสผ่าน" @bind="@password">
                                </div>
                            </div>
                            <div class="row pt-2" style="font-size:medium;">
                                <div class="col-md-12">
                                    <span class="font-weight-bold">New Password</span>
                                    <input type="password" class="form-control" id="password2" placeholder="รหัสผ่านใหม่" @bind="@password1">
                                </div>
                            </div>
                            <div class="row pt-2" style="font-size:medium;">
                                <div class="col-md-12">
                                    <span class="font-weight-bold">New Password again</span>
                                    <input type="password" class="form-control" id="password3" placeholder="ยืนยันรหัสผ่านใหม่" @bind="@password2">
                                </div>
                            </div>
                            <div class="row pt-1">
                                <div class="col-12 text-end">
                                    <a class="btn-link text-decoration-none" @onclick="@OnBack">Back to Login page</a>
                                </div>
                            </div>
                            <div class="row pt-4 pb-2">
                                <div class="col-md-12">
                                    <button type="button" @onclick="@OnChangePassword"
                                            class="btn btn-danger w-100">
                                        <h4 class="pt-1">ยืนยันรหัสผ่าน</h4>
                                    </button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>


@code {

    public string userName { get; set; }
    public string password { get; set; }
    public string password1 { get; set; } = "";
    public string password2 { get; set; } = "";
    //bool isLoading = true;

    protected override async Task OnInitializedAsync() {
        string username = await sessionStorage.GetItemAsync<string>(Globals.username_Change_Password);
        if (!string.IsNullOrEmpty(username))
        {
            userName = username;
        }
    }

    async void OnChangePassword() {

        if (password1 == "" && password2 == "") {
            await Swal.FireAsync("", "รหัสผ่านใหม่ไม่ตรงกัน", "error");
            return;
        }
        if (password1 != password2) {
            await Swal.FireAsync("", "รหัสผ่านใหม่ไม่ตรงกัน", "error");
            return;
        }

        //isLoading = true;

        string passwordold = password;
        string newPassword = password1;

        var rs = await _userService.UpdatePasswordNew(userName,passwordold,newPassword);

        if (rs.Result == "ok") {
            //isLoading = false;
            nav.NavigateTo("Login");
            await InvokeAsync(StateHasChanged);
        } else {
            //isLoading = false;
            await Swal.FireAsync("",rs.Message1, "error");
        }
    }

    void OnBack() {
        nav.NavigateTo("Login",false);
    }
   
}
