@page "/Stock/StkTransferList"
@using Robot.Data.ML;

@inject StkTransferService stkTransferService
<style>
   
</style>

        <div class="row">
            <div class="col-6">
                <Breadcrumb Mode="BreadcrumbMode.Auto">
                    <BreadcrumbItem>
                <BreadcrumbLink To="Dashboard/StartBoard">Main Menu</BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbItem>
                <BreadcrumbLink To="Stock/StkAdjustList">@menuCaption</BreadcrumbLink>
                    </BreadcrumbItem>
                </Breadcrumb>
            </div>
            @if (isShowNew) {
                <div class="col-6" style="text-align:right;">
                    <Button style="color:darkslategrey;" @onclick="@NewDoc">
                        <i class="fa-solid fa-file-circle-plus"></i>&nbsp;
                        สร้างเอกสารใหม่
                    </Button>
                </div>
            }
        </div>

        @* --ค้นหา--*@
        <Accordion Class="pt-1">
            <Collapse Visible="@collapse1Visible">
                <CollapseHeader>
                    <Heading Size="HeadingSize.Is5">
                        <Button Clicked="@(()=>collapse1Visible = !collapse1Visible)">แสดงการค้นหา</Button>
                    </Heading>
                </CollapseHeader>
                <CollapseBody>
                    <div class="row">
                <div class="col-md-2 col-12">
                    <span>สถานะ</span>
                    <TelerikComboBox @bind-Value="@Filter.Status"
                                     Data="@ListStatus"
                                     TextField="@nameof(SelectOption.Description)"
                                     ValueField="@nameof(SelectOption.Value)"
                                     Filterable="true"
                                     Width="100%">
                    </TelerikComboBox>
                </div>
                        <div class="col-md-2 col-12">
                            <label>วันที่</label>
                            <TelerikDatePicker @bind-Value="Filter.DateFrom"
                                               Format="dd/MM/yyyy" FillMode="@ThemeConstants.DatePicker.FillMode.Outline">
                            </TelerikDatePicker>
                        </div>
                        <div class="col-md-2 col-12">
                            <label>ถึงวันที่</label>
                            <TelerikDatePicker @bind-Value="Filter.DateTo"
                                               Format="dd/MM/yyyy" FillMode="@ThemeConstants.DatePicker.FillMode.Outline">
                            </TelerikDatePicker>
                        </div>
                        <div class="col-md-3 col-12 pt-4">
                            <div class="input-group">
                                <input type="text" class="form-control form-control-sm" placeholder="คำค้นหา" @bind-value="@Filter.SearchText">
                                <TelerikButton @onclick="@SearchAction" ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)">ค้นหา</TelerikButton>
                            </div>
                        </div>
                    </div>
                </CollapseBody>
            </Collapse>
        </Accordion>

        <div class="row pt-2">
            <div class="col-md-12">
                <TelerikGrid Data=@DocList
                     PageSize="30"
                     Resizable=true
                     Reorderable=true
                     Sortable="true" FilterMode="@GridFilterMode.FilterMenu">
                    <GridAggregates>
                <GridAggregate Field=@nameof(StkTransferHead.Qty) Aggregate="@GridAggregateType.Sum" /> 
                    </GridAggregates>
            <GridToolBarTemplate>
                <GridCommandButton Command="ExcelExport" Icon="@FontIcon.FileExcel">Export to Excel</GridCommandButton>
                <label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>
            </GridToolBarTemplate>
                    <GridExport>
                        <GridExcelExport FileName="telerik-grid-export" AllPages="@ExportAllPages" />
                    </GridExport>
                    <GridColumns>
                        <GridColumn Field="@nameof(StkTransferHead.TRID)" Title="เปิด" Editable="false" Width="80px">
                            <Template>
                                @{
                                    var data = context as StkTransferHead;
                                    <button class="btn btn-sm" @onclick="@(() => Edit(data))">
                                        <i class="fa-solid fa-folder-open" style="font-size:20px"></i>
                                    </button>
                                }
                            </Template>
                        </GridColumn>
                        <GridColumn Field=@nameof(StkTransferHead.TRID) Title="เลขที่" Width="150px" />
                <GridColumn Field=@nameof(StkTransferHead.TRDate) Title="วันที่ปรับสต็อก" Width="150px" DisplayFormat="{0:dd/MM/yyyy}" />
                        <GridColumn Field=@nameof(StkTransferHead.LocIDFr) Title="โอนจากคลัง" Width="150px" />
                <GridColumn Field=@nameof(StkTransferHead.LocIDTo) Title="โอนไปคลัง" Width="150px" />
                
                <GridColumn Field=@nameof(StkTransferHead.Qty) Title="จำนวน" Width="130px" DisplayFormat="{0:N0}">
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn> 
                
                <GridColumn Field=@nameof(vw_StkTransferHead.Status) Title="สถานะ" Width="150px" />
                <GridColumn Field=@nameof(vw_StkTransferHead.ApprovedDate) Title="วันที่ยืนยัน" Width="150px" DisplayFormat="{0:dd/MM/yyyy HH:mm}" />
                <GridColumn Field=@nameof(vw_StkTransferHead.ApprovedBy) Title="ยืนยันโดย" Width="150px" />
                <GridColumn Field=@nameof(vw_StkTransferHead.CreatedDate) Title="วันทีสร้างเอกสาร" Width="150px" DisplayFormat="{0:dd/MM/yyyy HH:mm}" />
                <GridColumn Field=@nameof(vw_StkTransferHead.CreatedBy) Title="สร้างโดย" Width="150px" DisplayFormat="{0:dd/MM/yyyy}" />
                <GridColumn Field=@nameof(vw_StkTransferHead.Remark) Title="หมายเหตุ" Width="300px" />
                
                    </GridColumns>
                </TelerikGrid>
            </div>
        </div>

<div class="demo-container">

    <TelerikLoaderContainer Size="@ThemeConstants.Loader.Size.Large"
                            Text="ระบบกำลังประมวลผล ....."
                            Visible="@isLoading"
                            LoaderPosition="@LoaderPosition.End"></TelerikLoaderContainer>
</div>
 

@code {

    bool isLoading = true;
    bool isShowNew = true;
    bool collapse1Visible = true;
    public string SearchText { get; set; } = "";
    string menuCaption = "";
    string menuGroupCaption = "";
    StkTransferService.I_StkTransferFiterSet Filter = StkTransferService.NewFilterSet();
    bool ExportAllPages { get; set; } = true;

    List<StkTransferHead> DocList = new List<StkTransferHead>();
    List<SelectOption> ListStatus = new List<SelectOption>();


    protected override async Task OnInitializedAsync() {
        Filter = await Task.Run(() => stkTransferService.GetSessionFiterSet());
        if (Filter == null) {
            Filter = StkTransferService.NewFilterSet();
        }
        await Task.Run(() => login.CheckLogin());
        LoadDropDown();
        await Task.Run(LoadData);
        await InvokeAsync(StateHasChanged);
    }

    async void LoadData() {
        SetDefaultFilter();
        DocList = StkTransferService.ListDoc(Filter);
        isLoading = false;
        await SetActiveControl();
        await InvokeAsync(StateHasChanged);
    }

    public void LoadDropDown() {
        ListStatus = StkTransferService.ListStatus();
    }

    void SetDefaultFilter() {
        Filter.Rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        Filter.Com = login.LoginInfo.CurrentCompany.CompanyID;
        stkTransferService.SetSessionFiterSet(Filter);
    }
    async Task SetActiveControl() {
        await CheckPermission();
    }

    async Task CheckPermission() {
        var menu = LogInService.GetMenuInfo(login.LoginInfo,"711");
        menuCaption = menu.Name;
        menuGroupCaption = LogInService.GetMenuGroup(login.LoginInfo, menu.GroupID).Name;
        if (!login.CanOpen(login.LoginInfo,"711")) {
            nav.NavigateTo("NoPermissionPage");
        }
        if (!login.CanCreate(login.LoginInfo,"711")) {
            isShowNew = false;
        }
    }

    async void Edit(StkTransferHead select_data) {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;
        isLoading = true;
        await sessionStorage.SetItemAsync(StkTransferService.sessionActiveId, select_data.TRID);
        stkTransferService.DocSet = stkTransferService.GetDocSet(select_data.TRID, rcom, com);
        nav.NavigateTo($"Stock/StkTransferDetail", false);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }

    async void SearchAction() {
        isLoading = true;
        await Task.Run(LoadData);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }



    public async void NewDoc() { 
        NewTran(); 
    }
    void CheckedChanged(bool value) {
        Filter.ShowActive = value;
    }

   async void NewTran() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;
        isLoading = true;
        await sessionStorage.RemoveItemAsync(StkTransferService.sessionActiveId);
        stkTransferService.DocSet = StkTransferService.NewTransaction(rcom,com);
        nav.NavigateTo($"Stock/StkTransferDetail", false);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }
}
