@page "/Stock/ItemMove"
@using Robot.Data.DA.Document;
@using Robot.Data.DA.HR;
@using Robot.Data.DA.USER;
@using Robot.Data.ML;
@using Robot.Pages.Stock
@using static Robot.Data.ML.I_Result;
@inject InventoryService inventoryService

<style>

    .k-input-spinner {
        display: none;
    }

    .rownormal {
        background-color: white;
    }

    .rowexpire {
        color: red;
    }

    .rowzeroday {
        color: blueviolet;
    }

    /* set cell no woard wrap*/
    .custom-ellipsis {
        overflow: hidden;
        max-height: 60px;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .swal2-container {
        z-index: 20000 !important;
    }
</style>






<div class="row pt-3">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-8">
                        <h4>
                            <a @onclick="Back">
                                <i class="fas fa-reply-all"></i>&nbsp;@menuCaption

                            </a>
                        </h4>
                    </div>

                    @*   <div class="col-md-4 text-end">

                    <Button style="color:darkslategrey;" @onclick="@ExportAlwLineEmp">

                    <i class="fa-solid fa-paper-plane"></i>&nbsp;
                    รายงานเบี้ยเลี้ยงขับรถ
                    </Button>

                    </div>*@


                </div>





            </div>
            <div class="card-body">
                <div class="row">


                    <div class="col-12 pt-4">

                        <div class="row">
                            @*
                            <div class="col-md-2 col-12">
                            <span>หน่วยงาน</span>
                            <TelerikComboBox @bind-Value="@Filter.CostCenter"
                            Data="@ListCostCenter"
                            TextField="@nameof(CompanyInfo.Name1)"
                            ValueField="@nameof(CompanyInfo.CompanyID)"
                            ItemHeight="35"
                            Filterable="true"
                            Size="ThemeConstants.DropDownList.Size.Large"
                            Width="100%">
                            </TelerikComboBox>
                            </div>*@

                            <div class="col-md-2">
                                <span>คลัง</span>
                                <TelerikDropDownList @bind-Value="@Filter.LocID"
                                                     Data="@ListLoc"
                                                     TextField="@nameof(LocationInfo.NameDisplay)"
                                                     ValueField="@nameof(LocationInfo.LocID)"
                                                     Filterable=true
                                                     Width="100%">
                                </TelerikDropDownList>

                            </div>

                            <div class="col-md-2">
                                <span>ยี่ห้อ</span>
                                <TelerikDropDownList Data="@ListType"
                                                     @bind-Value="@Filter.Type"
                                                     TextField="@nameof(MasterTypeLine.Description1)"
                                                     ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                     Filterable=true
                                                     Width="100%">
                                </TelerikDropDownList>
                            </div>


                            <div class="col-md-2">
                                <label>วันที่ </label>
                                <TelerikDatePicker @bind-Value="Filter.DateFrom"
                                                   Format="dd/MM/yyyy">
                                </TelerikDatePicker>

                            </div>
                            <div class="col-md-2">
                                <label>ถึงวันที่ </label>
                                <TelerikDatePicker @bind-Value="Filter.DateTo"
                                                   Format="dd/MM/yyyy">
                                </TelerikDatePicker>
                            </div>

                            <div class="col-md-4 pt-4">
                                <div class="input-group">
                                    <input type="text" class="form-control form-control-sm" placeholder="คำค้นหา" @bind-value="@Filter.SearchText">
                                    <TelerikButton @onclick="@SearchAction" ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)">ค้นหา</TelerikButton>
                                </div>
                            </div>


                        </div>

                    </div>

                </div>


            </div>
        </div>
    </div>
</div>

<div class="row pt-3">
    <div class="col-md-12">

        <TelerikGrid Data=@DocList
                     Pageable="true"
                     Groupable="false"
                     Sortable="true"
                     Resizable="true"
                     Reorderable="true"
                     PageSize="30"
                     FilterMode="Telerik.Blazor.GridFilterMode.FilterMenu"
                     Navigable="true">
            <GridToolBarTemplate>
                <GridCommandButton Command="ExcelExport" Icon="@FontIcon.FileExcel">Export to Excel</GridCommandButton>
                <label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>
            </GridToolBarTemplate>

            <GridExport>
                <GridExcelExport FileName="telerik-grid-export" AllPages="@ExportAllPages" />
            </GridExport>
            <GridColumns>

                <GridColumn Field="@nameof(vw_STKMove.LocID)" Title="คลัง" Width="140px" />
                <GridColumn Field="@nameof(vw_STKMove.ItemID)" Title="รหัสสินค้า" Width="200px" />
                <GridColumn Field="@nameof(vw_STKMove.ItemName)" Title="ชื่อ" Width="250px" />
                @*<GridColumn Field="@nameof(vw_STKMove.TypeID)" Title="ยี่ห้อ" Width="140px" />*@
                <GridColumn Field="@nameof(vw_STKMove.BrandID)" Title="ยี่ห้อ" Width="140px" />
                <GridColumn Field="@nameof(vw_STKMove.DocID)" Title="เลขเอกสาร" Width="140px" />
                <GridColumn Field="@nameof(vw_STKMove.DocType)" Title="ประเภท" Width="140px" />
                <GridColumn Field="@nameof(vw_STKMove.DocDate)" Title="วันที่เคลื่อนไหว" DisplayFormat="{0:dd/MM/yyyy}" Width="140px" />
                @*<GridColumn Field="@nameof(vw_STKMove.TransQty)" Title="TransQty" DisplayFormat="{0:N2}" Width="140px" />*@
                <GridColumn Field="@nameof(vw_STKMove.InQty)" Title="เข้า" DisplayFormat="{0:N2}" Width="140px" />
                <GridColumn Field="@nameof(vw_STKMove.OutQty)" Title="ออก" DisplayFormat="{0:N2}" Width="140px" />
                @* <GridColumn Field="@nameof(vw_STKMove.RemainQty)" Title="RemainQty" DisplayFormat="{0:N2}" Width="140px" />*@
                <GridColumn Field="@nameof(vw_STKMove.Unit)" Title="หน่วย" Width="140px" />

            </GridColumns>
        </TelerikGrid>
    </div>
</div>



<div class="demo-container">
    <TelerikLoaderContainer Size="@ThemeConstants.Loader.Size.Large"
                            Text="ระบบกำลังประมวลผล ....."
                            Visible="@isLoading"
                            LoaderPosition="@LoaderPosition.End"></TelerikLoaderContainer>
</div>

@code {


    bool isLoading = true;


    bool collapse1Visible = true;
    string menuCaption = "";
    string menuGroupCaption = "";
    public string SearchText { get; set; } = "";
    InventoryService.I_ItemMoveFiterSet Filter = InventoryService.NewItemMoveFilterSet();

    public IEnumerable<MasterTypeLine> ListService_Type;
    public MasterTypeLine SelectType { get; set; }

    //List<MasterTypeLine> ListService_Cate = new List<MasterTypeLine>();
    bool ExportAllPages { get; set; } = true;
    //public TelerikGrid<HRB_SalaryBase> dxDataGrid { get; set; }

    List<vw_STKMove> DocList = new List<vw_STKMove>();
    List<CompanyInfo> ListCostCenter = new List<CompanyInfo>();
    List<InventoryService.Brand> ListBrand = new List<InventoryService.Brand>();
    List<InventoryService.PayNo> ListPayNo = new List<InventoryService.PayNo>();
    List<MasterTypeLine> ListType = new List<MasterTypeLine>();
    public IEnumerable<LocationInfo> ListLoc;
    public LocationInfo SelectLoc { get; set; }
    List<InventoryService.ThaiMonthList> ListMonth = new List<InventoryService.ThaiMonthList>();



    public WindowState State { get; set; } = WindowState.Default;




    protected override async Task OnInitializedAsync() {
        Filter = await Task.Run(() => inventoryService.GetSessionItemMoveFiterSet());
        await Task.Run(LoadDropDown);
        if (Filter == null) {
            Filter = InventoryService.NewItemMoveFilterSet();

        }
        //pageHistory.AddPageToHistory(nav.Uri);
        await Task.Run(() => login.CheckLogin());
        await Task.Run(LoadData);

        await InvokeAsync(StateHasChanged);
    }

    protected override void OnInitialized() {


    }

    async void LoadDropDown() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;
        ListBrand = InventoryService.ListBrand();
        var loc_access = login.LoginInfo.UserInLoc.Select(o => o.LocID).ToList();
        ListLoc = LocService.ListLocID(rcom, com, loc_access);
        ListType = MasterTypeService.ListType("", "ITEM BRAND", true);
        ListCostCenter = CompanyService.ListBranch();
        ListService_Type = InventoryService.ListService_Type("", "ITEM BRAND");
    }


    void SetDefaultFilter() {
        Filter.RCom = login.LoginInfo.CurrentRootCompany.CompanyID;
        Filter.Com = login.LoginInfo.CurrentCompany.CompanyID;
        Filter.LocID = Filter.LocID == null ? "" : Filter.LocID;
        Filter.Type = Filter.Type == null ? "" : Filter.Type;

        inventoryService.SetSessionItemMoveFiterSet(Filter);
    }

    async void LoadData() {
        try {
            SetDefaultFilter();

            DocList = InventoryService.GetItemMove(Filter, login.LoginInfo);
            await SetActiveControl();
        } catch (Exception ex) {
            isLoading = false;
            await InvokeAsync(StateHasChanged);
            await Swal.FireAsync("Warning", ex.Message, "error");
        } finally {
            isLoading = false;
            await InvokeAsync(StateHasChanged);
        }


    }






    async Task SetActiveControl() {
        await CheckPermission();
    }
    async Task CheckPermission() {
        var menu = LogInService.GetMenuInfo(login.LoginInfo, "714");
        menuCaption = menu.Name;
        menuGroupCaption = LogInService.GetMenuGroup(login.LoginInfo, menu.GroupID).Name;
        if (!login.CanOpen(login.LoginInfo, "714")) {//714 สต๊อกเคลื่อนไหว
            nav.NavigateTo("NoPermissionPage");
        }
        if (!login.CanCreate(login.LoginInfo, "714")) {//714 สต๊อกเคลื่อนไหว

        }
    }



    public void BindData() {


    }


    async void SearchAction() {
        isLoading = true;
        await Task.Run(LoadData);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }



    public void Back() {
     //nav.NavigateTo($"Menu/MenuMaster/STOCK");
        nav.NavigateTo("Dashboard/StartBoard");
    }





}

