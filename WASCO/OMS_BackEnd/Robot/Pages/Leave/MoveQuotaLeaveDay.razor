@page "/Leave/MoveQuotaLeaveDay"
@using Robot.Data.DA.Leave
@using Robot.Data.DA.Document
@using Robot.Data.ML
@using Robot.Data.ML.DPMLeaveModel
@inject LeaveService leaveService

<SpinLoader IsLoading="isLoading">
    <LoadingTemplate>
        <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
            <br /><br />
            <div class="row pt-2">
                <div class="col-10 mx-auto">
                    <label style="color:orange; font-size:x-large;">... รอโหลดสักครู่ ...</label><br /><br /><br /><br />
                    <CircleFade Color="orange" Size="100px" Center="true" />
                </div>
            </div>
        </div>
    </LoadingTemplate>
    <ContentTemplate>

        <div class="row pt-5">
            <div class="col-md-6 col-sm-9 col-12 mx-auto">
                <a class="btn p-0" @onclick="@OnBack">
                    <p class="card-title">
                        <i class="fa fa-chevron-circle-left fa-2x"></i>
                        <span style="font-weight: bold; font-size:x-large; color: black;">ยกยอดวันลาหยุดพักผ่อน </span>
                    </p>
                </a>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 col-sm-9 col-12 mx-auto">
                @if (login.CanEdit(login.LoginInfo, "171")) {
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-12 col-12">
                                    <span>เลือกปีที่ยกยอด</span>
                                 
                                       <TelerikComboBox @bind-Value="@SelectYear"
                                                                                 Data="@cboYear"
                                                                                 TextField="@nameof(SelectOption.Description)"
                                                                                 ValueField="@nameof(SelectOption.Value)"
                                                                                 Filterable="true"
                                                                                 Width="100%">
                                                                </TelerikComboBox>
                                </div>
                                <div class="col-sm-12 col-12">
                                    <label>พนักงาน</label>



                                        


                                             <TelerikComboBox Data="@ListUser"
                                                  ScrollMode="@DropDownScrollMode.Virtual" 
                                                         ValueField="@(nameof(vw_UserInfo.Username))"
                                                         TextField="@(nameof(vw_UserInfo.FullName))"
                                                         Width="100%" PageSize="10" ItemHeight="35"
                                                         Value="@User" 
                                                         FilterOperator="@StringFilterOperator.Contains">
                                            <ComboBoxSettings>
                                                <ComboBoxPopupSettings Width="450px" Height="300px"></ComboBoxPopupSettings>
                                            </ComboBoxSettings>
                                            <HeaderTemplate>
                                                <div class="fw-bold py-2">&nbsp;&nbsp; ชื่อผู้ใช้ & ชื่อ-นามสกุล  </div>
                                            </HeaderTemplate>
                                            <ItemTemplate>
                                                <span>&nbsp;&nbsp; @($"{context.Username} - {context.FullName} ")</span>
                                            </ItemTemplate>
                                        </TelerikComboBox>

 
                                </div>

                                <div class="col-sm-12 col-12">
                                <label>จำนวนวัน</label>
                                       <TelerikTextBox @bind-Value="@txtLeaveDay"   />
                              
                                </div>

                                <div class="col-sm-12 col-12 text-start">
                                    <label>&nbsp;</label>
                                    <a @onclick="@OnSave" class="btn btn-success text-white w-100">
                                        <i class="far fa-save fa-lg"></i>&nbsp;
                                        บันทึกยกยอด
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }


            </div>
        </div>

    </ContentTemplate>
</SpinLoader>


@code {
    bool isLoading = true;
    public IEnumerable<vw_UserInfo> ListUser;
    public string User { get; set; } = "";
    public int FiscalYear { get; set; } = LeaveService.GetYearFiscalYear(DateTime.Now.Date);
    public string SelectLEAVETYPE { get; set; } = "";
    public List<MasterTypeLine> ListLEAVETYPE = new List<MasterTypeLine>();

    public string txtLeaveDay { get; set; } = "1";
    List<SelectOption> cboYear = new List<SelectOption>();
    public string SelectYear { get; set; } = "";

    protected override async Task OnInitializedAsync() {
        await Task.Run(() => login.CheckLogin());

        LoadDropDownList();
        await Task.Run(() => LoadData());
        await InvokeAsync(StateHasChanged);
    }

    void LoadDropDownList() {
        ListLEAVETYPE = MasterTypeService.ListType("", "LEAVE TYPE", true);

        int y = -1;
        for (int i = 2570; i >= DateTime.Now.AddYears(-3).Year + 543; i--) {
            y++;
            SelectOption year = new SelectOption {
                    IsSelect = false,
                    Value = i.ToString(),
                    Description = i.ToString()
                };
            cboYear.Insert(y, year);
        }
        SelectYear = "2564";
    }


    async public Task LoadData() {
        ListUser = await Task.Run(() => MyUserService.Listvw_UserInfo());
        isLoading = false;
    }

    async void OnBack() {
        nav.NavigateTo($"Leave/UserLeaveList", false);
    }

    bool ValidData() {

        bool isvalid = true;
        string Errmsg = "";

        if (string.IsNullOrEmpty(SelectYear)) {
            Errmsg = "ระบุ ปีที่ยกยอด";
            isvalid = false;
        }

        if (string.IsNullOrEmpty(User)) {
            Errmsg = "ระบุ พนักงาน";
            isvalid = false;
        }

        if (!isvalid) {
            Swal.FireAsync("", Errmsg, "error");
        }
        return isvalid;
    }

    async void OnSave() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        if (!ValidData()) {
            return;
        }

        var u = MyUserService.GetUserInfo(User);

        vw_HRLeave vleave = LeaveService.NewLineLeave(rcom,u.DefaultCompany,"ลาพักผ่อน");

        vleave.Username = User;
        vleave.PositionID = u.PositionID;
        vleave.PositionName = u.PositionID;
        int xLeaveDay = 0;
        int.TryParse(txtLeaveDay, out xLeaveDay);
        vleave.LeaveDay = xLeaveDay;
        vleave.WorkYear = Convert.ToInt32(SelectYear);

        vleave.DateFrom = new DateTime(2021, 09, 30).Date;
        vleave.DateTo = new DateTime(2021, 09, 30).Date;

        vleave.LeaveID = IDRuunerService.GetNewIDV2("LEAVE", rcom, "", vleave.DateFrom, false, "th")[1];

        vleave.ApproveStatus = "APPROVED";
        vleave.ApprovedBy = login.LoginInfo.CurrentUser;
        vleave.ApproveStatusL1 = "APPROVED";
        vleave.ApprovedByL1 = login.LoginInfo.CurrentUser;
        vleave.ApproveStatusL2 = "APPROVED";
        vleave.ApprovedByL2 = login.LoginInfo.CurrentUser;


        vleave.CreatedBy = login.LoginInfo.CurrentUser;
        vleave.ModifiedBy = login.LoginInfo.CurrentUser;
        vleave.ModifiedDate = DateTime.Now;
        vleave.DocType = "ใบลา";
        if (vleave.DocType == "ใบลา") {
            vleave.LeaveDay = Math.Abs(vleave.LeaveDay) * -1;
        }
        vleave.Remark = "ยกยอดมา " + xLeaveDay + " วัน";

        var leave = LeaveService.Convertvw2Leave(vleave);
        var rs = LeaveService.SaveMoveQuotaLeaveDay(leave);
        if (rs.Result != "ok") {
            await Swal.FireAsync("", rs.Message1, "error");
            return;
        } else {
            var r = LeaveService.RefreshLeaveCummu(Convert.ToInt32(SelectYear)+1,User, rcom);
            if (r.Result == "fail") {
                await Swal.FireAsync("Error", "Refresh error", "error");
                return;
            }
             ResetControl();
            await Swal.FireAsync("", "บันทึกสำเร็จ", "success");
            await LoadData();
            await InvokeAsync(StateHasChanged);
        }
    }

    private void ResetControl() {
        SelectYear = "2564";
        User = "";
        txtLeaveDay = "1";
    }

    async void OnNew() {

        if (SelectLEAVETYPE == "") {
            await Swal.FireAsync("", "!! ระบุ ประเภทการลา", "error");
            return;
        }

        if (User == "")
        {
            await Swal.FireAsync("", "!! ระบุ พนักงาน", "error");
            return;
        }
        var com = login.LoginInfo.CurrentUserInfo.DefaultCompany;
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var user = login.LoginInfo.CurrentUserInfo;
        await sessionStorage.RemoveItemAsync(LeaveService.sessionActiveId);
        await sessionStorage.SetItemAsync(LeaveService.sessionActiveId, user);


          var u = MyUserService.GetViewUserInfo(User); 
                var Leave = leaveService.DocSet.Leave;
 

        leaveService.DocSet = LeaveService.NewTransaction(rcom, com, SelectLEAVETYPE);
        leaveService.DocSet.Leave.Username = User;
        leaveService.DocSet.Leave.FullName = u.FullName;
        leaveService.DocSet.Leave.PositionID = u.PositionID;
        leaveService.DocSet.Leave.PositionName = MasterTypeService.GetType("JOB POSITION",u.PositionID)?.Description1;
        leaveService.DocSet.Leave.WorkYear = FiscalYear;
        leaveService.DocSet.Leave.CreatedBy = login.LoginInfo.CurrentUser;
        nav.NavigateTo($"Leave/LeaveDetail/0", false);

    }
}
