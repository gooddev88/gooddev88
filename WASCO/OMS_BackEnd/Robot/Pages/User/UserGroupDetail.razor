
@page "/User/UserGroupDetail"
@using  Robot.Data.GADB.TT
@using Robot.Data.DA
@using CurrieTechnologies.Razor.SweetAlert2
@using Robot.Data.ML
@using Robot.Data.DA.Login
@using Robot.Data.DA.Master
@using Robot.Data.DA.USER

@inject GAEntities db
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@inject UserGroupService UserGroupService
@inject StateContainer StateContainer
@inject LogInService login
@inject NavigationManager navigation
@inject SweetAlertService Swal 
@inject MasterTypeService mastertypeservice

<style>
</style>

    <div class="row pt-2">
        <div class="col-md-12 mx-auto">
            <div class="row pt-2">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header" style="background-color: lightgray !important">
                            <div class="row">
                                <div class="col-md-4">
                                    <button type="button" @onclick="@Back" class="btn btn-default">
                                        <span style="font-size: large; color: black ">
                                            <i class="fas fa-reply-all fa-2x "></i>&nbsp;
                                            <strong>
                                                กลับหน้ารายการ
                                            </strong>
                                        </span>
                                    </button>
                                </div>
                                <div class="col-md-4 text-center">
                                    <span style="font-size: large; color: black">
                                        <i class="fas fa-user fa-2x"></i> &nbsp;
                                        <strong>
                                            ข้อมูลกลุ่มผู้ใช้งาน
                                        </strong>
                                    </span>
                                </div>
                                <div class="col-md-4 text-right ">
                                    <button type="button" @onclick="@DeleteUserGroup"
                                            class="btn btn-default btn-lg">
                                        <span style="font-size: x-large; color: black">
                                            <i class="fas fa-user-times " style="color:red"></i>
                                        </span>
                                    </button>

                                </div>
                            </div>
                            <div class="card-body bg-light">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row " runat="server" id="divHome">
                                            <div class="col-md-12">

                                                <div class="row">
                                                    <div class="col-md-3">
                                                        <span>รหัสกลุ่มผู้ใช้งาน</span>
                                                        <DxTextBox Id="txtUserGroupId"
                                                                   InputId="txtUserGroupId"
                                                                   Enabled="@IsEditState"
                                                                   @bind-Text="@UserGroupService.DocSet.Group.UserGroupID"
                                                                   BindValueMode="BindValueMode.OnInput"
                                                                   SizeMode="@ControlSizeMode">
                                                        </DxTextBox>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <span>ชื่อกลุ่ม</span> <span style="color: red; font-size: medium;">*</span>
                                                        <DxTextBox Id="txtGroupName"
                                                                   InputId="txtGroupName"
                                                                   @bind-Text="@UserGroupService.DocSet.Group.GroupName"
                                                                   BindValueMode="BindValueMode.OnInput"
                                                                   SizeMode="@ControlSizeMode">
                                                        </DxTextBox>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <span>จัดเรียง</span> <span style="color: red; font-size: medium;">*</span>
                                                        <DxTextBox Id="txtSort"
                                                                   InputId="txtSort"
                                                                   @bind-Int="@UserGroupService.DocSet.Group.Sort"
                                                                   BindValueMode="BindValueMode.OnInput"
                                                                   SizeMode="@ControlSizeMode">
                                                        </DxTextBox>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row pt-4 text-center">
                                    <div class="col-md-12">
                                        <button type="button" @onclick="@Save" class="btn btn-success btn-lg">
                                            บันทึกข้อมูล
                                        </button>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header" style="background-color: #218c74 !important">
                            <div class="row" style="color:white">
                                <div class="col-md-12"><i class="fas fa-door-open fa-2x"></i> &nbsp;<span>Permission Info</span></div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="accordion">

                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #218c74 !important ">
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <a class="card-link" data-toggle="collapse" href="#collapseOne">
                                                                    <span style="color: white">สิทธิ์ในสาขา</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div id="collapseOne" class="collapse" data-parent="#accordion">
                                                        <div class="card-body bg-light" style="font-size:medium;">
                                                            <DxCheckBox Checked="@isUserGroupInCompanyAll" CheckedExpression="@(() => isUserGroupInCompanyAll)" CheckedChanged="@((bool value) => CheckedUserGroupInCompanyChange(value))">เลือกทั้งหมด</DxCheckBox>
                                                            <ul style="padding-left: 20px;">
                                                                @foreach (var pv in XUserGroupInCompany)
                                                                {
                                                                    <ol style="padding-left: 5px;"> <DxCheckBox @bind-Checked="@pv.X"><span>@pv.CompanyName</span></DxCheckBox></ol>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #218c74 !important ">
                                                        <a class="collapsed card-link" data-toggle="collapse" href="#collapseTwo">
                                                            <span style="color: white">สิทธิ์ใช้ Dashboard</span>
                                                        </a>
                                                    </div>
                                                    <div id="collapseTwo" class="collapse" data-parent="#accordion">
                                                        <div class="card-body bg-light" style="font-size:medium;">
                                                            <DxCheckBox Checked="@isUserGroupInBoardAll" CheckedExpression="@(() => isUserGroupInBoardAll)" CheckedChanged="@((bool value) => CheckedUserGroupInBoardChange(value))">เลือกทั้งหมด</DxCheckBox>
                                                            <ul style="padding-left: 20px;">
                                                                @foreach (var pv in XUserGroupInBoard)
                                                                {
                                                                    <ol style="padding-left: 5px;"> <DxCheckBox @bind-Checked="@pv.X"><span>@pv.Name</span></DxCheckBox></ol>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #218c74 !important ">
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <a class="card-link" data-toggle="collapse" href="#collapseThree">
                                                                    <span style="color: white">กำหนดสิทธิ์ ตามเมนู</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div id="collapseThree" class="collapse" data-parent="#accordion">
                                                        <div class="card-body bg-light" style="font-size:medium;">
                                                            <DxCheckBox Checked="@isMenuAll" CheckedExpression="@(() => isMenuAll)" CheckedChanged="@((bool value) => CheckedMenuChange(value))">เลือกทั้งหมด</DxCheckBox>
                                                            <ul style="padding-left: 20px;">
                                                                @foreach (var pv in XMenu)
                                                                {
                                                                    <ol style="padding-left: 5px;"> <DxCheckBox @bind-Checked="@pv.X"><span>@pv.MenuName</span></DxCheckBox></ol>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>



    @code{


        // Permission
        List<UserGroupService.XUserGroupInCompany> XUserGroupInCompany = new List<UserGroupService.XUserGroupInCompany>();
        List<UserGroupService.XUserGroupInBoard> XUserGroupInBoard = new List<UserGroupService.XUserGroupInBoard>();
        List<UserGroupService.XMenu> XMenu = new List<UserGroupService.XMenu>();

        private SizeMode ControlSizeMode = SizeMode.Medium;
        public bool IsEditState { get; set; } = true;
        public bool divlogin { get; set; } = true;
        string Search { get; set; } = "";
        bool ShowDisable = false;


        bool isUserGroupInCompanyAll { get; set; } = false;
        bool isUserGroupInBoardAll { get; set; } = false;
        bool isMenuAll { get; set; } = false;

        protected override void OnInitialized() {
            //if (UserGroupService.DocSet == null)
            //{
            //    UserGroupService.DocSet = UserGroupService.NewTransaction();
            //}
            LoadData();
        }


        void LoadData() {
            var h = UserGroupService.DocSet.Group;

            XUserGroupInCompany = UserGroupService.ListCompany(h.UserGroupID);
            XUserGroupInBoard = UserGroupService.ListBoard(h.UserGroupID);
            XMenu = UserGroupService.ListMenu(h.UserGroupID);

            BindData();
            SetActiveControl();
        }

        private void SetActiveControl() {
            var h = UserGroupService.DocSet.Group;
            if (h.UserGroupID == "") {

                IsEditState = true;
                divlogin = false;
            } else {
                IsEditState = false;
                divlogin = true;
            }
        }

        private void BindData() {
            var h = UserGroupService.DocSet.Group;

        }

        //void MapCheckBoxUserInGroup(List<UserGroupService.XUserInGroup> XUserInGroup)
        //{
        //    foreach (var l in XUserInGroup)
        //    {
        //        if (UserGroupService.DocSet.XGroup != null)
        //            l.X = UserGroupService.DocSet.XGroup.Where(x => x.X == l.X).Any() ? true : false;
        //    }
        //}

        private void SetLineData()
        {

            foreach (var pv in XUserGroupInCompany)
            {
                if (pv.X)
                {
                    var l = new UserGroupService.XUserGroupInCompany();
                    l.X = pv.X;
                    l.isChecked = pv.X;
                    l.UserGroupID = pv.UserGroupID;
                    l.CompanyID = pv.CompanyID;
                    l.CompanyName = pv.CompanyName;
                    l.RComID = pv.RComID;
                    l.CompanyType = pv.CompanyType;
                    l.CompanyTypeName = pv.CompanyTypeName;
                    l.IsActive = pv.IsActive;
                    UserGroupService.DocSet.XCompany.Add(l);
                }
            }

            foreach (var pv in XUserGroupInBoard)
            {
                if (pv.X)
                {
                    var l = new UserGroupService.XUserGroupInBoard();
                    l.X = pv.X;
                    l.isChecked = pv.X;
                    l.UserGroupID = pv.UserGroupID;
                    l.RComID = pv.RComID;
                    l.DashBoardID = pv.DashBoardID;
                    l.Name = pv.Name;
                    UserGroupService.DocSet.XBoard.Add(l);
                }
            }

            foreach (var pv in XMenu)
            {
                if (pv.X)
                {
                    var l = new UserGroupService.XMenu();
                    l.X = pv.X;
                    l.isChecked = pv.X;
                    l.UserGroupID = pv.UserGroupID;
                    l.MenuID = pv.MenuID;
                    l.MenuCode = pv.MenuCode;
                    l.MenuName = pv.MenuName;
                    l.NeedCreatePermission = pv.X;
                    l.NeedOpenPermission = pv.X;
                    l.NeedEditPermission = pv.X;
                    l.NeedDeletePermission = pv.X;
                    l.NeedPrintPermission = pv.X;
                    l.IsCreate = pv.X;
                    l.IsOpen = pv.X;
                    l.IsEdit = pv.X;
                    l.IsDelete = pv.X;
                    l.IsPrint = pv.X;
                    UserGroupService.DocSet.XMenu.Add(l);
                }
            }

        }

        async void Save() {
            if (!ValidData()) {
                return;
            }

            var isnew = PrepairDataSave();

            SetLineData();

            I_Result.I_BasicResult Result;
            if (isnew) {
                Result = UserGroupService.Save(UserGroupService.DocSet);
            } else {
                Result = UserGroupService.Save(UserGroupService.DocSet);
            }

            if (Result.Result == "ok") {
                UserGroupService.DocSet = UserGroupService.GetDocSet(UserGroupService.DocSet.Group.UserGroupID);
                await Swal.FireAsync("", "บันทึกสำเร็จ", "success");
                navigation.NavigateTo($"/USER/UserGroupList", true);
                //SetActiveControl();
                //this.StateHasChanged();
            } else {
                if (isnew) {
                    UserGroupService.DocSet.Group.UserGroupID = "";
                }
                await Swal.FireAsync("", Result.Message1, "error");
            }

        }

        private bool PrepairDataSave() {
            bool isNew = UserGroupService.DocSet.Group.UserGroupID == "" ? true : false;
            var h = UserGroupService.DocSet.Group;
            if (isNew) {
                //h.AlertID = idgenservice.GetNewIDV2("ALERT", "", h.AlertDate.Date, false, "th")[1];

            }


            h.GroupName = h.GroupName;
            h.Sort = h.Sort;

            return isNew;
        }

        bool ValidData() {
            bool isvalid = true;
            string Errmsg = "";
            var h = UserGroupService.DocSet.Group;

            if (h.UserGroupID == "") {
                Swal.FireAsync("", "ระบุ รหัสกลุ่มผู้ใช้งาน", "error");
                return false;
            }
            if (h.GroupName == "") {
                Swal.FireAsync("", "ระบุ ชื่อกลุ่ม ", "error");
                return false;
            }

            if (Convert.ToString(h.Sort) == "") {
                Swal.FireAsync("", "ระบุ ลำดับ ", "error");
                return false;
            }

            if (!isvalid) {
                Swal.FireAsync("", Errmsg, "error");
            }
            return isvalid;
        }



        void CheckedUserGroupInCompanyChange(bool isCheck)
        {
            isUserGroupInCompanyAll = isCheck;
            XUserGroupInCompany.ForEach(x => x.X = isCheck);
            this.StateHasChanged();
        }


        void CheckedUserGroupInBoardChange(bool isCheck)
        {
            isUserGroupInBoardAll = isCheck;
            XUserGroupInBoard.ForEach(x => x.X = isCheck);
            this.StateHasChanged();
        }

        void CheckedMenuChange(bool isCheck)
        {
            isMenuAll = isCheck;
            XMenu.ForEach(x => x.X = isCheck);
            this.StateHasChanged();
        }

        void Back() {
            navigation.NavigateTo($"/USER/UserGroupList", true);
        }

        //void newUser() {
        //    UserGroupService.DocSet = UserGroupService.NewTransaction();
        //    navigation.NavigateTo($"/USER/UserDetairel");
        //    LoadData();
        //}
        void DeleteUserGroup() {
            var h = UserGroupService.DocSet.Group;
            UserGroupService.DeleteUserGroup(h.UserGroupID); ;
            navigation.NavigateTo($"/USER/UserGroupList", true);
        }

    }
