// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace RobotAPI.Data.XFilesCenterDB.TT {
    public partial class XfilescenterContext : DbContext {





        private readonly IConfiguration Configuration;
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { 
            optionsBuilder.UseSqlServer(Globals.XfilescenterContextConn);
        }
        public XfilescenterContext() {
        }

        public XfilescenterContext(DbContextOptions<XfilescenterContext> options)
            : base(options) {
        }




        public virtual DbSet<vw_files> vw_files { get; set; }
        public virtual DbSet<vw_xfiles_ref> vw_xfiles_ref { get; set; }
        public virtual DbSet<xfile_location> xfile_location { get; set; }
        public virtual DbSet<xfiles> xfiles { get; set; }
        public virtual DbSet<xfiles_ref> xfiles_ref { get; set; } 
      public virtual DbSet<user_info> user_info { get; set; }
        protected override void OnModelCreating(ModelBuilder modelBuilder) {
            modelBuilder.Entity<vw_files>(entity => {
                entity.HasNoKey();

                entity.ToView("vw_files");

                entity.Property(e => e.app_id)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.com_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.created_by)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.created_date).HasColumnType("datetime");

              

                entity.Property(e => e.db_name)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.db_server)
                    .IsRequired()
                    .HasMaxLength(120);

                entity.Property(e => e.doc_cate)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.doc_id)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.doc_type)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.file_ext)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.file_name)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.file_path)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.file_type)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.loc_id)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.login_name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.login_password)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.modified_by)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.modified_date).HasColumnType("datetime");

                entity.Property(e => e.origin_file_ext)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.origin_filename)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.origin_filepath)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.owner_id)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.rcom_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.remark)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.root_path)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.root_url)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.source_table)
                    .IsRequired()
                    .HasMaxLength(60);
            });

            modelBuilder.Entity<xfile_location>(entity => {
                entity.Property(e => e.app_id)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.created_by)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.db_name)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.db_server)
                    .IsRequired()
                    .HasMaxLength(120);

                entity.Property(e => e.end_date).HasColumnType("datetime");

                entity.Property(e => e.loc_id)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.loc_type)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.login_name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.login_password)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.root_path)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.root_url)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.start_date).HasColumnType("datetime");
            });

            modelBuilder.Entity<xfiles>(entity => {
                entity.Property(e => e.app_id)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.created_by)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.data).IsRequired();

                entity.Property(e => e.data_inbase64).IsRequired();

                entity.Property(e => e.data_thumb).IsRequired();

                entity.Property(e => e.file_ext)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.file_name)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.file_path)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.file_type)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.modified_by)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.modified_date).HasColumnType("datetime");

                entity.Property(e => e.origin_file_ext)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.origin_filename)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.origin_filepath)
                    .IsRequired()
                    .HasMaxLength(1000);
            });

            modelBuilder.Entity<xfiles_ref>(entity => {
                entity.Property(e => e.app_id)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.com_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.created_by)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.created_date).HasColumnType("datetime");

                entity.Property(e => e.doc_cate)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.doc_id)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.doc_type)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.file_id)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.loc_id)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.modified_by)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.modified_date).HasColumnType("datetime");

                entity.Property(e => e.owner_id)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.rcom_id)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.remark)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.source_table)
                    .IsRequired()
                    .HasMaxLength(60);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}