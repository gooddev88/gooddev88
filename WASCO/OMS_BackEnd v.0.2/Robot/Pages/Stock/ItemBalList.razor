@page "/Stock/ItemBalList"
@using Robot.Data.DA.Document;
@using Robot.Data.DA.HR;
@using Robot.Data.DA.USER;
@using Robot.Data.ML;
@using Robot.Pages.Stock
@using static Robot.Data.ML.I_Result;
@inject InventoryService inventoryService

<style>

    .k-input-spinner {
        display: none;
    }

    .rownormal {
        background-color: white;
    }

    .rowexpire {
        color: red;
    }

    .rowzeroday {
        color: blueviolet;
    }

    /* set cell no woard wrap*/
    .custom-ellipsis {
        overflow: hidden;
        max-height: 60px;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .swal2-container {
        z-index: 20000 !important;
    }
</style>






<div class="row pt-3">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-3">
                        <h4>
                            <a @onclick="Back">
                                <i class="fas fa-reply-all"></i>&nbsp;@menuCaption

                            </a>
                        </h4>
                    </div>

                </div>





            </div>
            <div class="card-body">
                <div class="row">


                    <div class="col-12 pt-4">

                        <div class="row">
                            <div class="col-md-3">
                                <span>คลัง</span>
                                <TelerikDropDownList @bind-Value="@Filter.LocID"
                                                     Data="@ListLoc"
                                                     TextField="@nameof(LocationInfo.NameDisplay)"
                                                     ValueField="@nameof(LocationInfo.LocID)"
                                                     Filterable=true
                                                     Width="100%">
                                </TelerikDropDownList>

                            </div>

                            <div class="col-md-2">
                                <span>ยี่ห้อ</span>
                                <TelerikDropDownList Data="@ListBrand"
                                                     @bind-Value="@Filter.Brand"
                                                     TextField="@nameof(MasterTypeLine.Description1)"
                                                     ValueField="@nameof(MasterTypeLine.ValueTXT)"
                                                     Filterable=true
                                                     Width="100%"> 
                                </TelerikDropDownList>
                            </div>
                                   <div class="col-md-3 pt-4">  
                                 <TelerikCheckBox Id="isShowNoZero" @bind-Value="@Filter.ShowNotZero" />
                                    <label for="isShowNoZero">แสดงที่คงเหลือเท่านั้น</label>
                            </div>
                      
                            <div class="col-4 pt-4">
                                <div class="input-group">
                                    <input type="text" class="form-control form-control-sm" placeholder="คำค้นหา" @bind-value="@Filter.SearchText">
                                    <TelerikButton @onclick="@SearchAction" ThemeColor="@(ThemeConstants.Button.ThemeColor.Primary)">ค้นหา</TelerikButton>
                                </div>
                            </div>

                        </div>

                    </div>

                </div>


            </div>
        </div>
    </div>
</div>

<div class="row pt-3">
    <div class="col-md-12">






        <TelerikGrid Data=@DocList
                     Pageable="true"
                     Groupable="false"
                     Sortable="true"
                     Resizable="true"
                     Reorderable="true"
                     PageSize="30"
                     FilterMode="Telerik.Blazor.GridFilterMode.FilterMenu"
                     Navigable="true">
            <GridAggregates>
                <GridAggregate Field=@nameof(vw_STKBal.BalQty) Aggregate="@GridAggregateType.Sum" />  
            </GridAggregates>
            <GridToolBarTemplate>
                <GridCommandButton Command="ExcelExport" Icon="@FontIcon.FileExcel">Export to Excel</GridCommandButton>
                <label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>
            </GridToolBarTemplate>

            <GridExport>
                <GridExcelExport FileName="telerik-grid-export" AllPages="@ExportAllPages" />
            </GridExport>
            <GridColumns>


                <GridColumn Field="@nameof(vw_STKBal.LocID)" Title="คลัง" Width="140px" />
                <GridColumn Field="@nameof(vw_STKBal.ItemID)" Title="รหัสสินค้า" Width="200px">


                    <Template>
                        @{
                            var data = context as vw_STKBal;
                            <button class="btn btn-sm" @onclick="@(() => ShowItemMove(data))">
                                <span style="color: blue;">@data.ItemID</span>
                            </button>
                        }
                    </Template>
                </GridColumn>

                <GridColumn Field="@nameof(vw_STKBal.ItemName)" Title="ชื่อ" Width="250px" />
                <GridColumn Field="@nameof(vw_STKBal.BrandID)" Title="ยี่ห้อ" Width="140px" />
                <GridColumn Field="@nameof(vw_STKBal.CateID)" Title="หมวด" Width="140px" />
                <GridColumn Field="@nameof(vw_STKBal.PriceIncVat)" Title="ราคารวมVat" DisplayFormat="{0:N2}" Width="140px" />
                <GridColumn Field="@nameof(vw_STKBal.PriceProIncVat)" Title="ราคาโปรโมชั่นรวมVat" DisplayFormat="{0:N2}" Width="140px" />
                <GridColumn Field="@nameof(vw_STKBal.BalQty)" Title="คงเหลือ" DisplayFormat="{0:N2}" Width="140px" >
                    <FooterTemplate>
                        @context.Sum?.ToString("n2")
                    </FooterTemplate>
                </GridColumn>
                @*                <GridColumn Field="@nameof(vw_STKBal.RetQty)" Title="RetQty" DisplayFormat="{0:N2}" Width="140px" />*@
                <GridColumn Field="@nameof(vw_STKBal.UnitID)" Title="หน่วย" Width="140px" />







            </GridColumns>
        </TelerikGrid>
    </div>
</div>

<TelerikWindow @bind-State="@State" Width="1000px" Height="600px" Modal=true
               @bind-Visible=@isPopupItemMove>
    <WindowTitle>
        <strong>ความเคลื่อนไหว</strong>
    </WindowTitle>
    <WindowContent>
        <h3>
            @if (@select_Item_ShowMovement!=null) {
                <span> สินค้า</span>  <b> @select_Item_ShowMovement.ItemID - @select_Item_ShowMovement.ItemName</b>
            }
            


        </h3>
        <div class="row">
            <div Class="col-12">
                <div class="row pt-2">


                    <div class="row pt-2">
                        <div class="col-md-12">

                            <TelerikGrid Data=@ItemMoveList
                                         Pageable="true"
                                         Groupable="false"
                                         Sortable="true"
                                         Resizable="true"
                                         Reorderable="true"
                                         PageSize="30"
                                         Navigable="true">
                                <GridAggregates>
                                    <GridAggregate Field=@nameof(vw_STKMove.InQty) Aggregate="@GridAggregateType.Sum" />
                                    <GridAggregate Field=@nameof(vw_STKMove.OutQty) Aggregate="@GridAggregateType.Sum" />
                                </GridAggregates>
                                <GridColumns>
                                    <GridColumn Field="@nameof(vw_STKMove.LocID)" Title="รหัสคลัง" Width="140px" />
                                    <GridColumn Field="@nameof(vw_STKMove.InQty)" Title="เข้า" DisplayFormat="{0:N2}" Width="140px">
                                        <FooterTemplate>
                                            @context.Sum?.ToString("n2")
                                        </FooterTemplate>
                                    </GridColumn>
                                    <GridColumn Field="@nameof(vw_STKMove.OutQty)" Title="ออก" DisplayFormat="{0:N2}" Width="140px">
                                        <FooterTemplate>
                                            @context.Sum?.ToString("n2")
                                        </FooterTemplate>
                                    </GridColumn>
                                    <GridColumn Field="@nameof(vw_STKMove.DocID)" Title="เลขเอกสาร" Width="140px" />
                                    <GridColumn Field="@nameof(vw_STKMove.DocType)" Title="ประเภท" Width="140px" />
                                    <GridColumn Field="@nameof(vw_STKMove.DocDate)" Title="วันที่เคลื่อนไหว" DisplayFormat="{0:dd/MM/yyyy}" Width="140px" />
                                    <GridColumn Field="@nameof(vw_STKMove.Unit)" Title="หน่วย" Width="140px" />
                                </GridColumns>
                            </TelerikGrid>
                        </div>
                    </div>



                </div>

            </div>
        </div>
    </WindowContent>
    <WindowActions>
        <WindowAction Name="Close" />
    </WindowActions>
</TelerikWindow>

<div class="demo-container">
    <TelerikLoaderContainer Size="@ThemeConstants.Loader.Size.Large"
                            Text="ระบบกำลังประมวลผล ....."
                            Visible="@isLoading"
                            LoaderPosition="@LoaderPosition.End"></TelerikLoaderContainer>
</div>

@code {


    bool isLoading = true;


    bool collapse1Visible = true;
    bool isPopupItemMove = false;
    string menuCaption = "";
    string menuGroupCaption = "";
    public string SearchText { get; set; } = "";
    InventoryService.I_ItemBalSetFiterSet Filter = InventoryService.NewItemBalFilterSet();

    vw_STKBal select_Item_ShowMovement = new vw_STKBal();
    //List<MasterTypeLine> ListService_Cate = new List<MasterTypeLine>();
    bool ExportAllPages { get; set; } = true;
    //public TelerikGrid<HRB_SalaryBase> dxDataGrid { get; set; }
    public string txtLoc { get; set; }

    public IEnumerable<MasterTypeLine> ListService_Type;
    public MasterTypeLine SelectType { get; set; }

    public IEnumerable<LocationInfo> ListLoc;
    public LocationInfo SelectLoc { get; set; }

    List<vw_STKBal> DocList = new List<vw_STKBal>();
    List<vw_STKMove> ItemMoveList = new List<vw_STKMove>();
    List<CompanyInfo> ListCostCenter = new List<CompanyInfo>();
    //List<MasterTypeLine> ListType = new List<MasterTypeLine>();
    List<MasterTypeLine> ListBrand = new List<MasterTypeLine>();
    List<InventoryService.PayNo> ListPayNo = new List<InventoryService.PayNo>();

    List<InventoryService.ThaiMonthList> ListMonth = new List<InventoryService.ThaiMonthList>();



    public WindowState State { get; set; } = WindowState.Default;




    protected override async Task OnInitializedAsync() {
        Filter = await Task.Run(() => inventoryService.GetSessionItemBalFiterSet());
        await Task.Run(LoadDropDown);
        if (Filter == null) {
            Filter = InventoryService.NewItemBalFilterSet();

        }
        //pageHistory.AddPageToHistory(nav.Uri);
        await Task.Run(() => login.CheckLogin());
        await Task.Run(LoadData);

        await InvokeAsync(StateHasChanged);
    }

    protected override void OnInitialized() {


    }

    async void LoadDropDown() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;
        ListBrand = MasterTypeService.ListType("", "ITEM BRAND", true);
        var loc_access = login.LoginInfo.UserInLoc.Select(o => o.LocID).ToList();
        ListLoc = LocService.ListLocID(rcom, com, loc_access);
        ListCostCenter = CompanyService.ListBranch();
        ListService_Type = InventoryService.ListService_Type("", "ITEM BRAND");
    }


    void SetDefaultFilter() {
        Filter.RCom = login.LoginInfo.CurrentRootCompany.CompanyID;
        Filter.Com = login.LoginInfo.CurrentCompany.CompanyID;
        Filter.LocID = Filter.LocID == null ? "" : Filter.LocID;
        Filter.Type = Filter.Type == null ? "" : Filter.Type;

        inventoryService.SetSessionItemBalFiterSet(Filter);
    }

    async void LoadData() {
        try {
            SetDefaultFilter();
            BindData();
            DocList = InventoryService.ListDoc(Filter, login.LoginInfo);
            await SetActiveControl();
        } catch (Exception ex) {
            isLoading = false;
            await InvokeAsync(StateHasChanged);
            await Swal.FireAsync("Warning", ex.Message, "error");
        } finally {
            isLoading = false;
            await InvokeAsync(StateHasChanged);
        }


    }






    async Task SetActiveControl() {
        await CheckPermission();
    }
    async Task CheckPermission() {
        var menu = LogInService.GetMenuInfo(login.LoginInfo, "712");
        menuCaption = menu.Name;
        menuGroupCaption = LogInService.GetMenuGroup(login.LoginInfo, menu.GroupID).Name;
        if (!login.CanOpen(login.LoginInfo, "712")) {//712 สต๊อกคงเหลือ
            nav.NavigateTo("NoPermissionPage");
        }
        if (!login.CanCreate(login.LoginInfo, "712")) {//712 สต๊อกคงเหลือ

        }
    }



    public void BindData() {

    }


    async void SearchAction() {
        isLoading = true;
        await Task.Run(LoadData);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }



    public void Back() { 
        //nav.NavigateTo($"Menu/MenuMaster/STOCK");
        nav.NavigateTo("Dashboard/StartBoard");
    }




    async void ShowItemMove(vw_STKBal select_data) {
        select_Item_ShowMovement = select_data;
        isLoading = true;
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var com = login.LoginInfo.CurrentCompany.CompanyID;

        await sessionStorage.SetItemAsync(InventoryService.sessionActiveId, select_data.ItemID);

        ItemMoveList = await InventoryService.ItemMoveList(rcom, com, select_data.ItemID, select_data.LocID, login.LoginInfo);
        isPopupItemMove = true;
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }


    async void AddLoc() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var comInfo = login.LoginInfo.CurrentCompany;
        var createby = login.LoginInfo.CurrentUser;
        var currency = login.LoginInfo.CurrentCompany.Currency;
        isLoading = true;

        await sessionStorage.RemoveItemAsync(InventoryService.sessionActiveId);
        nav.NavigateTo($"/Order/SO/LocList", false);
        await InvokeAsync(StateHasChanged);
    }

}

