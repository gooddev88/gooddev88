@page "/Master/UserGroup/UserGroupDetail"
@inject MyUserGroupService usergroupService

<style>
    .hidden {
        visibility: hidden;
        display: none;
    }

    .k-input-spinner {
        display: none;
    }

    .k-state-disabled, .k-disabled, .k-widget[disabled], .k-disabled {
        background: #e9ecef !important;
        opacity: 1;
    }

    .k-checkbox:checked, .k-checkbox.k-checked {
        border-color: #03a9f4;
        background-color: #03a9f4;
    }
</style>

<SpinLoader IsLoading="isLoading">
    <LoadingTemplate>
        <div class="col-12 text-center" style="background-color: transparent; height: 100%; vertical-align: middle;">
            <br /><br />
            <div class="row pt-2">
                <div class="col-10 mx-auto">
                    <label style="color:orange; font-size:x-large;">... รอโหลดสักครู่ ...</label><br /><br /><br /><br />
                    <CircleFade Color="orange" Size="100px" Center="true" />
                </div>
            </div>
        </div>
    </LoadingTemplate>
    <ContentTemplate>

        <div class="row">
            <div class="col-12">

                <div class="row">
                    <div class="col-6">
                        <Breadcrumb Mode="BreadcrumbMode.Auto">
                          
                            <BreadcrumbItem>
                                <BreadcrumbLink To="Master/UserGroup/UserGroupList">หน้ารายการ</BreadcrumbLink>
                            </BreadcrumbItem>
                            <BreadcrumbItem Active>
                                <BreadcrumbLink To="#">แก้ไข</BreadcrumbLink>
                            </BreadcrumbItem>
                        </Breadcrumb>
                    </div>
                    <div class="col-6 text-end">
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <TelerikButton Size="@(ThemeConstants.Button.Size.Large)"
                                           @onclick="@btnSave" Class=""
                                           ThemeColor="@(ThemeConstants.Button.ThemeColor.Success)">
                                <i class="fa-solid fa-floppy-disk"></i>&nbsp; บันทึกข้อมูล
                            </TelerikButton>&nbsp;&nbsp;
                            @if (isShowNew) {
                                <TelerikButton Size="@(ThemeConstants.Button.Size.Large)"
                                           @onclick="@NewDoc" Class=""
                                           ThemeColor="@(ThemeConstants.Button.ThemeColor.Tertiary)">
                                    <i class="fa-solid fa-circle-plus"></i>&nbsp; ++NEW++
                                </TelerikButton>
                            }
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <div class="row pt-2">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="card-header bg-dark">
                                        <div class="row">
                                            <div class="col-md-12 text-start">
                                                <span style="color: white">
                                                    <i class="fas fa-user-secret fa-2x"></i>
                                                    <span>
                                                        @lblTopic
                                                    </span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body bg-light">
                                        <div class="row" style="font-size: smaller">
                                            <div class="col-md-2">
                                                <span>รหัสกลุ่มผู้ใช้งาน</span>
                                                <TelerikTextBox PlaceHolder="" @bind-Value="@usergroup" Enabled="@usergroup_readonly" />
                                            </div>
                                            <div class="col-md-3">
                                                <span>ชื่อกลุ่ม</span>
                                                <TelerikTextBox @bind-Value="@usergroupService.DocSet.Group.GroupName" />
                                            </div>

                                            <div class="col-md-2">
                                                <span>จัดเรียง</span>
                                                <TelerikNumericTextBox Decimals="0" Enabled="true" Format="N0"
                                                                       Class="text-center font-weight-bold" @bind-Value="sort"></TelerikNumericTextBox>
                                            </div>
                                            @if (isShowDelete) {
                                                <div class="col-md-2 pt-4">
                                                    <TelerikCheckBox Id="chkIsActive" @bind-Value="@usergroupService.DocSet.Group.IsActive"></TelerikCheckBox>
                                                    <span style="font-size:large;">ใช้งาน</span>
                                                </div>
                                            }
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row pt-2 @IsdivPermission" id="divPermission">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="card-header bg-dark">
                                        <div class="row " style="color:white">
                                            <div class="col-md-6">
                                                <i class="fas fa-door-open fa-2x"></i> &nbsp;
                                                <span>Permission Info</span>
                                            </div>
                                            <div class="col-md-6 text-right">
                                            </div>

                                        </div>
                                    </div>
                                    <div class="card-body bg-light">

                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #feca57 !important">
                                                        <div class="row">
                                                            <div class="col-6">
                                                                <a class="w-100 text-decoration-none" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                        IsVisibleCompany = !IsVisibleCompany;
                                                                                })">
                                                                    <span style="color: black">สิทธิ์ในสาขา</span>
                                                                </a>
                                                            </div>
                                                            <div class="col-6 text-end">
                                                                <a class="w-100 text-decoration-none" @onclick="@(() =>ComCheckUnCheckAll(true) )">
                                                                    <span style="color: black">เลือกทั้งหมด</span>
                                                                </a>
                                                                &nbsp;
                                                                <a class="w-100 text-decoration-none" @onclick="@(() =>ComCheckUnCheckAll(false) )">
                                                                    <span style="color: black">ไม่เลือกทั้งหมด</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="collapse @(IsVisibleCompany ? "show" : "")">
                                                        <div class="card-body bg-white pb-1">
                                                            @foreach (var a in usergroupService.DocSet.XCompany.Where(o => o.CompanyType == "COMPANY")) {
                                                                <div class="row">
                                                                    <div class="col-12">
                                                                        <TelerikCheckBox @bind-Value="@a.X"></TelerikCheckBox>
                                                                        &nbsp;&nbsp;<span>@a.CompanyName</span>
                                                                    </div>
                                                                </div>
                                                                @foreach (var c in usergroupService.DocSet.XCompany.Where(o => o.CompanyType == "BRANCH" && o.RCompanyID == a.RCompanyID)) {
                                                                    <div class="row">
                                                                        <div class="col-2">
                                                                        </div>
                                                                        <div class="col-2">
                                                                            <TelerikCheckBox Value="@c.X" ValueChanged="@((bool value) => ComCheckedChanged(value, c.CompanyID))"></TelerikCheckBox>
                                                                            &nbsp;&nbsp;<span>@c.CompanyID</span>
                                                                        </div>
                                                                        <div class="col-8">
                                                                            <span>@c.CompanyName</span>
                                                                        </div>
                                                                    </div>
                                                                    <hr class="mt-1" />
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #feca57 !important">
                                                        <a class="w-100 text-decoration-none" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                        IsVisibleDashboard = !IsVisibleDashboard;
                                                                                })">
                                                            <span style="color: black">สิทธิ์ใช้ Dashboard</span>
                                                        </a>
                                                    </div>
                                                    <div class="collapse @(IsVisibleDashboard ? "show" : "")">
                                                        <div class="card-body bg-white pb-1">
                                                            @foreach (var b in usergroupService.DocSet.XBoard) {
                                                                <div class="row">
                                                                    <div class="col-2">
                                                                        <TelerikCheckBox @bind-Value="@b.X"></TelerikCheckBox>
                                                                        &nbsp;&nbsp;<span>@b.DashBoardID</span>
                                                                        @*<DxCheckBox @bind-Checked="@b.X">&nbsp;&nbsp;<span>@b.DashBoardID</span></DxCheckBox>*@
                                                                    </div>
                                                                    <div class="col-10">
                                                                        <span>@b.Name</span>
                                                                    </div>
                                                                </div>
                                                                <hr class="mt-1" />
                                                            }

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #feca57 !important">
                                                        <a class="w-100 text-decoration-none" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                        IsVisibleLoc = !IsVisibleLoc;
                                                                                })">
                                                            <span style="color: black">สิทธิ์ใช้ คลัง</span>
                                                        </a>
                                                    </div>
                                                    <div class="collapse @(IsVisibleLoc ? "show" : "")">
                                                        <div class="card-body bg-white pb-1">
                                                            @foreach (var loc in usergroupService.DocSet.XLoc) {
                                                                <div class="row">
                                                                    <div class="col-12">
                                                                        <TelerikCheckBox @bind-Value="@loc.X"></TelerikCheckBox>
                                                                        &nbsp;&nbsp;<span>@loc.LocID - @loc.Name</span>
                                                                        @*<DxCheckBox @bind-Checked="@b.X">&nbsp;&nbsp;<span>@b.DashBoardID</span></DxCheckBox>*@
                                                                    </div>
                                                                   
                                                                </div>
                                                                <hr class="mt-1" />
                                                            }

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #feca57 !important">
                                                        <a class="w-100 text-decoration-none" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                        IsVisibleMenu = !IsVisibleMenu;
                                                                                })">
                                                            <span style="color: black">กำหนดสิทธิ์ ตามเมนู</span>
                                                        </a>
                                                    </div>
                                                    <div class="collapse @(IsVisibleMenu ? "show" : "")">
                                                        <div class="card-body bg-white pb-1">
                                                            @*        @foreach (var m in usergroupService.DocSet.XMenu) {
                                                            <div class="row">
                                                            <div class="col-4">
                                                            <span>@m.MenuName ( @m.MenuID )</span>
                                                            </div>
                                                            <div class="col-8">
                                                            <div class="btn-group">
                                                            <DxCheckBox @bind-Checked="@m.IsOpen" CssClass="@(m.NeedOpenPermission ? "" : "hidden")">&nbsp;<span>@m.CaptionOpenPermission </span>&nbsp;&nbsp;</DxCheckBox>
                                                            <DxCheckBox @bind-Checked="@m.IsCreate" CssClass="@(m.NeedCreatePermission ? "" : "hidden")">&nbsp;<span>@m.CaptionCreatePermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                            <DxCheckBox @bind-Checked="@m.IsEdit" CssClass="@(m.NeedEditPermission ? "" : "hidden")">&nbsp;<span>@m.CaptionEditPermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                            <DxCheckBox @bind-Checked="@m.IsDelete" CssClass="@(m.NeedDeletePermission ? "" : "hidden")">&nbsp;<span>@m.CaptionDeletePermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                            <DxCheckBox @bind-Checked="@m.IsPrint" CssClass="@(m.NeedPrintPermission ? "" : "hidden")">&nbsp;<span>@m.CaptionPrintPermission</span></DxCheckBox>
                                                            </div>
                                                            </div>
                                                            </div>
                                                            <hr class="mt-1" />
                                                            }*@
                                                            @foreach (var m in usergroupService.DocSet.XMenu.Where(o => o.MenuTypeID == "MENUGROUP").OrderBy(o => o.MenuGroupSort).ToList()) {
                                                                <br />
                                                                <div class="row">

                                                                    <div class="col-12">
                                                                        <div class="btn-group">
                                                                            <TelerikCheckBox Class="@(m.NeedOpenPermission ? "" : "hidden")" @bind-Value="@m.IsOpen"></TelerikCheckBox>
                                                                            &nbsp; <strong>@m.MenuDesc1 </strong>&nbsp;&nbsp;
                                                                            @* <DxCheckBox @bind-Checked="@m.IsOpen" CssClass="@(m.NeedOpenPermission ? "" : "hidden")">&nbsp; <strong>@m.MenuDesc1 </strong>&nbsp;&nbsp;</DxCheckBox>*@
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <hr class="mt-1" />
                                                                @foreach (var mm in usergroupService.DocSet.XMenu.Where(o => o.MenuTypeID == "MENU" && o.MenuGroupID == m.MenuGroupID).OrderBy(o => o.MenuSubGroupSort).ToList()) {
                                                                    <div class="row  pl-4">
                                                                        <div class="col-4">
                                                                            <span>@mm.MenuDesc1</span>
                                                                        </div>
                                                                        <div class="col-8">
                                                                            <div class="btn-group">
                                                                                <TelerikCheckBox @bind-Value="@mm.IsOpen" Class="@(mm.NeedOpenPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mm.CaptionOpenPermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mm.IsCreate" Class="@(mm.NeedCreatePermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mm.CaptionCreatePermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mm.IsEdit" Class="@(mm.NeedEditPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mm.CaptionEditPermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mm.IsDelete" Class="@(mm.NeedDeletePermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mm.CaptionDeletePermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mm.IsPrint" Class="@(mm.NeedPrintPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mm.CaptionPrintPermission </span>&nbsp;&nbsp;

                                                                                @*<DxCheckBox @bind-Checked="@mm.IsOpen" CssClass="@(mm.NeedOpenPermission ? "" : "hidden")">&nbsp;<span>@mm.CaptionOpenPermission </span>&nbsp;&nbsp;</DxCheckBox>*@
                                                                                @*<DxCheckBox @bind-Checked="@mm.IsCreate" CssClass="@(mm.NeedCreatePermission ? "" : "hidden")">&nbsp;<span>@mm.CaptionCreatePermission</span>&nbsp;&nbsp;</DxCheckBox>*@
                                                                                @*<DxCheckBox @bind-Checked="@mm.IsEdit" CssClass="@(mm.NeedEditPermission ? "" : "hidden")">&nbsp;<span>@mm.CaptionEditPermission</span>&nbsp;&nbsp;</DxCheckBox>*@
                                                                                @*<DxCheckBox @bind-Checked="@mm.IsDelete" CssClass="@(mm.NeedDeletePermission ? "" : "hidden")">&nbsp;<span>@mm.CaptionDeletePermission</span>&nbsp;&nbsp;</DxCheckBox>*@
                                                                                @*<DxCheckBox @bind-Checked="@mm.IsPrint" CssClass="@(mm.NeedPrintPermission ? "" : "hidden")">&nbsp;<span>@mm.CaptionPrintPermission</span></DxCheckBox>*@
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                                @foreach (var mmm in usergroupService.DocSet.XMenu.Where(o => o.MenuTypeID == "FUNCTION" && o.MenuGroupID == m.MenuGroupID).OrderBy(o => o.MenuSubGroupSort).ToList()) {
                                                                    <div class="row  pl-4">
                                                                        <div class="col-4">
                                                                            <span>@mmm.MenuDesc1</span>
                                                                        </div>
                                                                        <div class="col-8">
                                                                            <div class="btn-group">
                                                                                <TelerikCheckBox @bind-Value="@mmm.IsOpen" Class="@(mmm.NeedOpenPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mmm.CaptionOpenPermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mmm.IsCreate" Class="@(mmm.NeedCreatePermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mmm.CaptionCreatePermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mmm.IsEdit" Class="@(mmm.NeedEditPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mmm.CaptionEditPermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mmm.IsDelete" Class="@(mmm.NeedDeletePermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mmm.CaptionDeletePermission </span>&nbsp;&nbsp;
                                                                                <TelerikCheckBox @bind-Value="@mmm.IsPrint" Class="@(mmm.NeedPrintPermission ? "" : "hidden")"></TelerikCheckBox>&nbsp;<span>@mmm.CaptionPrintPermission </span>&nbsp;&nbsp;

                                                                                @*<DxCheckBox @bind-Checked="@mmm.IsOpen" CssClass="@(mmm.NeedOpenPermission ? "" : "hidden")">&nbsp;<span>@mmm.CaptionOpenPermission </span>&nbsp;&nbsp;</DxCheckBox>
                                                                        <DxCheckBox @bind-Checked="@mmm.IsCreate" CssClass="@(mmm.NeedCreatePermission ? "" : "hidden")">&nbsp;<span>@mmm.CaptionCreatePermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                                        <DxCheckBox @bind-Checked="@mmm.IsEdit" CssClass="@(mmm.NeedEditPermission ? "" : "hidden")">&nbsp;<span>@mmm.CaptionEditPermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                                        <DxCheckBox @bind-Checked="@mmm.IsDelete" CssClass="@(mmm.NeedDeletePermission ? "" : "hidden")">&nbsp;<span>@mmm.CaptionDeletePermission</span>&nbsp;&nbsp;</DxCheckBox>
                                                                        <DxCheckBox @bind-Checked="@mmm.IsPrint" CssClass="@(mmm.NeedPrintPermission ? "" : "hidden")">&nbsp;<span>@mmm.CaptionPrintPermission</span></DxCheckBox>*@
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row pt-2">
                                            <div class="col-md-12">
                                                <div class="card">
                                                    <div class="card-header" style="background-color: #feca57 !important">
                                                        <a class="w-100 text-decoration-none" data-toggle="collapse" @onclick="@(() =>
                                                                                {
                                                                                        IsVisibleUserInGroup = !IsVisibleUserInGroup;
                                                                                })">
                                                            <span style="color: black">ผู้ใช้งาน</span>
                                                        </a>
                                                    </div>
                                                    <div class="collapse @(IsVisibleUserInGroup ? "show" : "")">
                                                        <div class="card-body bg-white pb-1">
                                                            @foreach (var ug in usergroupService.DocSet.User) {
                                                                <div class="row">
                                                                    <div class="col-12">
                                                                        <span> @ug.Username &nbsp;&nbsp;(@ug.FullName)</span>
                                                                    </div>
                                                                </div>
                                                                <hr class="mt-1" />
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>
        </div>

    </ContentTemplate>
</SpinLoader>

@code {
    bool isLoading = true;
    bool isShowNew = true;
    bool isShowDelete = true;
    string menuCaption = "";
    string menuGroupCaption = "";

    public bool usergroup_readonly { get; set; } = false;
    public string usergroup { get; set; } = "";
    public string lblTopic { get; set; } = "ข้อมูลกลุ่มผู้ใช้งาน";

    int sort = 0;

    bool ShowFilterRow = false;
    string IsdivPermission { get; set; } = "";
    // public int Sort { get; set; }

    public bool IsVisibleUserInGroup { get; set; } = true;
    public bool IsVisibleCompany { get; set; } = true;
    public bool IsVisibleDashboard { get; set; } = true;
    public bool IsVisibleLoc { get; set; } = true;
    public bool IsVisibleMenu { get; set; } = true;

    //protected override async Task OnParametersSetAsync() {
    //    if (usergroupService.DocSet == null) {
    //        usergroupService.DocSet = usergroupService.NewTransaction(login.LoginInfo.CurrentUser, login.LoginInfo.CurrentCompany.CompanyID);
    //        LoadData();
    //    }
    //}

    protected override async Task OnInitializedAsync() {
        pageHistory.AddPageToHistory(nav.Uri);
        await Task.Run(() => login.CheckLogin());
        await Task.Run(() => CheckIsRefresh());
        await Task.Run(LoadData);
    }

    async Task CheckIsRefresh() {
        if (usergroupService.DocSet == null) {
            var docid = await sessionStorage.GetItemAsync<string>(MyUserGroupService.sessionActiveId);
            string rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
            string com = login.LoginInfo.CurrentCompany.CompanyID;
            string user_login = login.LoginInfo.CurrentUser;
            if (!string.IsNullOrEmpty(docid)) {
                usergroupService.DocSet = usergroupService.GetDocSet(docid, rcom);
            } else {
                usergroupService.DocSet = MyUserGroupService.NewTransaction(rcom);
                usergroupService.DocSet.Group.CreatedBy = user_login;
            }
        }
    }

    async void LoadData() {
        LoadDropDownList();
        BindData();
        isLoading = false;
        SetActiveControl();
        await InvokeAsync(StateHasChanged);
    }
    private void SetActiveControl() {
        CheckPermission();
    }
    private void CheckPermission() {
        var menu = LogInService.GetMenuInfo(login.LoginInfo, "9003");
        menuCaption = menu.Name;
        menuGroupCaption = LogInService.GetMenuGroup(login.LoginInfo, menu.GroupID).Name;
        if (!login.CanCreate(login.LoginInfo, "9003")) { //9003 User Group & Permission
            isShowNew = false;
        }
        if (!login.CanDelete(login.LoginInfo, "9003")) {
            isShowDelete = false;
        }
        if (!login.CanOpen(login.LoginInfo, "9003")) {
            nav.NavigateTo("NoPermissionPage");
        }
    }




    private void LoadDropDownList() {

    }

    void BindData() {
        var h = usergroupService.DocSet.Group;

        usergroup = h.UserGroupID;
        sort = h.Sort;
        if (h.UserGroupID != "") {
            usergroup_readonly = false;
            usergroup = h.UserGroupID;
            IsdivPermission = "";
        } else {
            IsdivPermission = "hidden";
            usergroup_readonly = true;
        }

    }

    async Task NewDoc() {
        var xlogin = login.LoginInfo;
        await sessionStorage.RemoveItemAsync(MyUserGroupService.sessionActiveId);
        usergroupService.DocSet = MyUserGroupService.NewTransaction(xlogin.CurrentRootCompany.CompanyID);
        usergroupService.DocSet.Group.CreatedBy = xlogin.CurrentUser;
        LoadData();
        await InvokeAsync(StateHasChanged);
    }

    #region Save Item
    bool ValidData() {
        var h = usergroupService.DocSet.Group;
        var xlogin = login.LoginInfo;

        string Errmsg = "";

        if (usergroup == "") {
            Errmsg = "ระบุรหัสกลุ่ม!! ";
            Swal.FireAsync("warning", Errmsg, "info");
            return false;
        }

        if (h.GroupName == "") {
            Errmsg = "ระบุชื่อกลุ่ม!! ";
            Swal.FireAsync("warning", Errmsg, "info");
            return false;
        }
        if (h.UserGroupID == "") {
            var chkdup_group_id = MyUserGroupService.CheckGroupID(usergroup, xlogin.CurrentRootCompany.CompanyID);
            if (chkdup_group_id.Result == "fail") {
                Swal.FireAsync("warning", Errmsg, "info");
                return false;
            }
            usergroupService.DocSet.Group.Sort = Convert.ToInt32(sort);
            var check_dup_sort = MyUserGroupService.CheckDupSort(h, xlogin.CurrentRootCompany.CompanyID);
            if (check_dup_sort.Result == "fail") {

                usergroupService.DocSet.Group.Sort = Convert.ToInt32(check_dup_sort.Message2);
            }
        }
        return true;
    }

    async private Task Save() {
        var rcom = login.LoginInfo.CurrentRootCompany.CompanyID;
        var user = login.LoginInfo.CurrentUser;

        var isnew = PrepairDataSave();
        var group = usergroupService.DocSet.Group;
        var rs = MyUserGroupService.Save(usergroupService.DocSet, rcom, user);
        if (rs.Result != "ok") {
            group.UserGroupID = "";
            await Swal.FireAsync("warning", rs.Message1, "info");
        } else {
            if (isnew) {
                await sessionStorage.SetItemAsync(MyUserService.sessionActiveId, group.UserGroupID);
            }
            usergroupService.DocSet = usergroupService.GetDocSet(usergroupService.DocSet.Group.UserGroupID, login.LoginInfo.CurrentRootCompany.CompanyID);
            BindData();
            await Swal.FireAsync("success", "บันทึกสำเร็จ", "success");
            await InvokeAsync(StateHasChanged);
        }

    }

    async void btnSave() {

        if (!ValidData()) {
            return;
        }
        isLoading = true;
        await Task.Run(Save);
        isLoading = false;
        await InvokeAsync(StateHasChanged);
    }

    bool PrepairDataSave() {
        bool isnew = false;
        var h = usergroupService.DocSet.Group;
        if (h.UserGroupID == "") {
            isnew = true;
            h.UserGroupID = usergroup;
        }

        h.Sort = sort;
        return isnew;
    }

    #endregion

    void ComCheckedChanged(bool value, string comid) {
        var com_select = usergroupService.DocSet.XCompany.Where(o => o.CompanyID == comid).FirstOrDefault();
        com_select.X = value;
        //var gg = usergroupService.DocSet.XCompany.Where(o => o.CompanyType == "GROUP").ToList();
        //foreach (var g in gg) {
        //    g.X = false;
        //}
        var chk_com_ingroup = usergroupService.DocSet.XCompany.Where(o => o.CompanyType == "BRANCH" && o.CompnayGroup == com_select.CompnayGroup && o.X == true).ToList();
        var group = usergroupService.DocSet.XCompany.Where(o => o.CompanyType == "COMPANY" && o.CompnayGroup == com_select.CompnayGroup).FirstOrDefault();
        if (chk_com_ingroup.Count > 0) {
            group.X = true;
        } else {
            group.X = false;
        }
    }

    void ComCheckUnCheckAll(bool ischeck) {
        foreach (var u in usergroupService.DocSet.XCompany) {
            u.X = ischeck;
        }
    }
}
