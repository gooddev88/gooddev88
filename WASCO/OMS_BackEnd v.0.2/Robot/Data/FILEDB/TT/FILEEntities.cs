// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Robot.Data.FILEDB.TT
{
    public partial class FILEEntities : DbContext
    {
        public FILEEntities()
        {
        }

        public FILEEntities(DbContextOptions<FILEEntities> options)
            : base(options)
        {
        }

        public virtual DbSet<XFiles> XFiles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Thai_CI_AS");

            modelBuilder.Entity<XFiles>(entity =>
            {
                entity.HasIndex(e => e.FileID, "IX_XFiles");

                entity.Property(e => e.AppID).HasMaxLength(30);

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.CreatedDate).HasColumnType("datetime");

                entity.Property(e => e.DataInBase64).IsRequired();

                entity.Property(e => e.FileExt)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.FileID)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasComment("ใช้อ้างอิงกับ Table : DocFileData มาจาก RefTableSource+\"-\"+KeyRefID");

                entity.Property(e => e.FileName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.FilePath)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.FileType)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasComment("IMG / FILE");

                entity.Property(e => e.ModifiedBy).HasMaxLength(30);

                entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.OriginFileExt)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.OriginFileName)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.OriginFilePath)
                    .IsRequired()
                    .HasMaxLength(1000);

                entity.Property(e => e.Remark).IsRequired();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}